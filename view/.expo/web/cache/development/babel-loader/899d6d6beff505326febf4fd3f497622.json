{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Portal } from \"./base/PortalContext\";\nimport Surface from \"./Surface\";\nvar Dialog = function Dialog(_ref) {\n  var _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? false : _ref$visible,\n    onDismiss = _ref.onDismiss,\n    children = _ref.children;\n  var _useState = useState(visible),\n    _useState2 = _slicedToArray(_useState, 2),\n    portalVisible = _useState2[0],\n    setPortalVisible = _useState2[1];\n  var animatedValue = useMemo(function () {\n    return new Animated.Value(visible ? 1 : 0);\n  }, []);\n  useEffect(function () {\n    if (visible) setPortalVisible(true);\n    Animated.timing(animatedValue, {\n      toValue: visible ? 1 : 0,\n      duration: 225,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: Platform.OS !== 'android'\n    }).start(function () {\n      if (!visible) setPortalVisible(false);\n    });\n  }, [visible]);\n  if (!portalVisible) return null;\n  return React.createElement(Portal, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: onDismiss\n  }, React.createElement(Animated.View, {\n    style: [StyleSheet.absoluteFill, styles.backdrop, {\n      opacity: animatedValue\n    }]\n  })), React.createElement(Animated.View, {\n    style: [StyleSheet.absoluteFill, styles.container, {\n      opacity: animatedValue\n    }],\n    pointerEvents: \"box-none\",\n    needsOffscreenAlphaCompositing: Platform.OS === 'android'\n  }, React.createElement(Surface, {\n    category: \"medium\",\n    elevation: 24,\n    style: [styles.surface]\n  }, children)));\n};\nvar styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0,0,0,.5)'\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  surface: {\n    width: 280,\n    marginHorizontal: 40\n  }\n});\nexport default Dialog;","map":{"version":3,"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,SAASC,MAAT;AACA,OAAOC,OAAP;AAQA,IAAMC,MAA6B,GAAG,SAAhCA,MAA6B,CAAGC,MAA8C;EAAA,wBAA3CC,OAAO;IAAPA,OAAO,6BAAG,KAAZ;IAAmBC,SAAnB,GAA6CF,KAA1BE,SAAnB;IAA8BC,WAAeH,KAAfG;EACnE,gBAA0CP,QAAQ,CAACK,OAAD,CAAlD;IAAA;IAAOG,aAAD;IAAgBC,gBAAhB;EAEN,IAAMC,aAAa,GAAGX,OAAO,CAAC;IAAA,OAAM,IAAIY,QAAQ,CAACC,KAAb,CAAmBP,OAAO,GAAG,CAAH,GAAO,CAAjC,CAAP;EAAA,GAA4C,EAA5C,CAA7B;EAEAP,SAAS,CAAC,YAAM;IACd,IAAIO,OAAJ,EAAaI,gBAAgB,CAAC,IAAD,CAAhB;IAEbE,QAAQ,CAACE,MAAT,CAAgBH,aAAhB,EAA+B;MAC7BI,OAAO,EAAET,OAAO,GAAG,CAAH,GAAO,CADM;MAE7BU,QAAQ,EAAE,GAFmB;MAG7BC,MAAM,EAAEC,MAAM,CAACC,GAAP,CAAWD,MAAM,CAACE,KAAlB,CAHqB;MAI7BC,eAAe,EAAEC,QAAQ,CAACC,EAAT,KAAgB;IAJJ,CAA/B,EAKGC,KALH,CAKS,YAAM;MACb,IAAI,CAAClB,OAAL,EAAcI,gBAAgB,CAAC,KAAD,CAAhB;IACf,CAPD;EAQD,CAXQ,EAWN,CAACJ,OAAD,CAXM,CAAT;EAaA,IAAI,CAACG,aAAL,EAAoB,OAAO,IAAP;EAEpB,OACEX,oBAACI,MAAD,QACEJ,oBAAC2B,wBAAD;IAA0BC,OAAO,EAAEnB;EAAnC,GACET,oBAACc,QAAD,CAAUe,IAAV;IAAeC,KAAK,EAAE,CAACC,UAAU,CAACC,YAAZ,EAA0BC,MAAM,CAACC,QAAjC,EAA2C;MAAEC,OAAO,EAAEtB;IAAX,CAA3C;EAAtB,EADF,CADF,EAIEb,oBAACc,QAAD,CAAUe,IAAV;IACEC,KAAK,EAAE,CAACC,UAAU,CAACC,YAAZ,EAA0BC,MAAM,CAACG,SAAjC,EAA4C;MAAED,OAAO,EAAEtB;IAAX,CAA5C,CADT;IAEEwB,aAAa,EAAC,UAFhB;IAGEC,8BAA8B,EAAEd,QAAQ,CAACC,EAAT,KAAgB;EAHlD,GAKEzB,oBAACK,OAAD;IAASkC,QAAQ,EAAC,QAAlB;IAA2BC,SAAS,EAAE,EAAtC;IAA0CV,KAAK,EAAE,CAACG,MAAM,CAACQ,OAAR;EAAjD,GACG/B,QADH,CALF,CAJF,CADF;AAgBD,CApCD;AAsCA,IAAMuB,MAAM,GAAGF,UAAU,CAACW,MAAX,CAAkB;EAC/BR,QAAQ,EAAE;IACRS,eAAe,EAAE;EADT,CADqB;EAI/BP,SAAS,EAAE;IACTQ,cAAc,EAAE,QADP;IAETC,UAAU,EAAE;EAFH,CAJoB;EAQ/BJ,OAAO,EAAE;IACPK,KAAK,EAAE,GADA;IAEPC,gBAAgB,EAAE;EAFX;AARsB,CAAlB,CAAf;AAcA,eAAezC,MAAf","names":["React","useEffect","useMemo","useState","Portal","Surface","Dialog","_ref","visible","onDismiss","children","portalVisible","setPortalVisible","animatedValue","Animated","Value","timing","toValue","duration","easing","Easing","out","cubic","useNativeDriver","Platform","OS","start","TouchableWithoutFeedback","onPress","View","style","StyleSheet","absoluteFill","styles","backdrop","opacity","container","pointerEvents","needsOffscreenAlphaCompositing","category","elevation","surface","create","backgroundColor","justifyContent","alignItems","width","marginHorizontal"],"sources":["Dialog.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Animated, Easing, Platform, StyleSheet, TouchableWithoutFeedback } from 'react-native';\nimport { Portal } from './base/PortalContext';\nimport Surface from './Surface';\n\nexport interface DialogProps {\n  visible?: boolean;\n\n  onDismiss?: () => void;\n}\n\nconst Dialog: React.FC<DialogProps> = ({ visible = false, onDismiss, children }) => {\n  const [portalVisible, setPortalVisible] = useState(visible);\n\n  const animatedValue = useMemo(() => new Animated.Value(visible ? 1 : 0), []);\n\n  useEffect(() => {\n    if (visible) setPortalVisible(true);\n\n    Animated.timing(animatedValue, {\n      toValue: visible ? 1 : 0,\n      duration: 225,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: Platform.OS !== 'android',\n    }).start(() => {\n      if (!visible) setPortalVisible(false);\n    });\n  }, [visible]);\n\n  if (!portalVisible) return null;\n\n  return (\n    <Portal>\n      <TouchableWithoutFeedback onPress={onDismiss}>\n        <Animated.View style={[StyleSheet.absoluteFill, styles.backdrop, { opacity: animatedValue }]} />\n      </TouchableWithoutFeedback>\n      <Animated.View\n        style={[StyleSheet.absoluteFill, styles.container, { opacity: animatedValue }]}\n        pointerEvents=\"box-none\"\n        needsOffscreenAlphaCompositing={Platform.OS === 'android'}\n      >\n        <Surface category=\"medium\" elevation={24} style={[styles.surface]}>\n          {children}\n        </Surface>\n      </Animated.View>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0,0,0,.5)',\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  surface: {\n    width: 280,\n    marginHorizontal: 40,\n  },\n});\n\nexport default Dialog;\n"]},"metadata":{},"sourceType":"module"}