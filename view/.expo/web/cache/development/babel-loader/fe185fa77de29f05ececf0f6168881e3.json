{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport style from \"./style\";\nimport { Title, AppButton, InputBox } from \"../../lib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResetPassword(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    passwordConfirm = _useState4[0],\n    setPasswordConfirm = _useState4[1];\n  var validatePassword = function validatePassword() {\n    if (password.length <= 8) {\n      alert(\"Password must be at least 8 characters\");\n    } else if (password === passwordConfirm) {\n      alert(\"Password successfully changed\");\n      navigation.navigate('Login');\n    } else if (password != passwordConfirm) {\n      alert('Passwords do not match');\n    }\n  };\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsx(Title, {\n      color: \"#4F5200\",\n      fontFamily: \"PTSansNarrow\",\n      fontSize: 40,\n      children: \"Reset Password\"\n    }), _jsx(InputBox, {\n      placeholder: \"Password\",\n      keyboardType: \"password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(InputBox, {\n      placeholder: \"Confirm Password\",\n      keyboardType: \"password\",\n      onChangeText: function onChangeText(text) {\n        return setPasswordConfirm(text);\n      },\n      secureTextEntry: true\n    }), _jsx(AppButton, {\n      onPress: function onPress() {\n        validatePassword();\n      },\n      children: \"Submit\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","style","Title","AppButton","InputBox","ResetPassword","navigation","password","setPassword","passwordConfirm","setPasswordConfirm","validatePassword","length","alert","navigate","container","text"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/components/auth/Screens/resetPassword/ResetPassword.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View } from \"react-native\";\r\nimport style from './style'\r\nimport { Title, AppButton, InputBox } from \"../../lib\";\r\n\r\nexport default function ResetPassword({navigation}) {\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n\r\n    const validatePassword = () => {\r\n        if(password.length <= 8) {\r\n            alert(\"Password must be at least 8 characters\")\r\n        } else if(password === passwordConfirm) {\r\n            alert(\"Password successfully changed\")\r\n            navigation.navigate('Login')\r\n        } else if (password != passwordConfirm) {\r\n            alert('Passwords do not match')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style = {style.container}>\r\n            <Title\r\n                color='#4F5200'\r\n                fontFamily='PTSansNarrow'\r\n                fontSize={40}>Reset Password</Title>\r\n            <InputBox\r\n                placeholder = \"Password\"\r\n                keyboardType=\"password\"\r\n                secureTextEntry={true}\r\n                onChangeText = {(text) => setPassword(text)}\r\n            />\r\n            <InputBox\r\n                placeholder = \"Confirm Password\"\r\n                keyboardType=\"password\"\r\n                onChangeText = {(text) =>setPasswordConfirm(text)}\r\n                secureTextEntry={true}\r\n            />\r\n            <AppButton onPress={() => { validatePassword() }}>Submit</AppButton>\r\n        </View>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAEtC,OAAOC,KAAK;AACZ,SAASC,KAAK,EAAEC,SAAS,EAAEC,QAAQ;AAAoB;AAAA;AAEvD,eAAe,SAASC,aAAa,OAAe;EAAA,IAAbC,UAAU,QAAVA,UAAU;EAC7C,gBAAgCN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCO,QAAQ;IAAEC,WAAW;EAC5B,iBAA8CR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnDS,eAAe;IAAEC,kBAAkB;EAE1C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC3B,IAAGJ,QAAQ,CAACK,MAAM,IAAI,CAAC,EAAE;MACrBC,KAAK,CAAC,wCAAwC,CAAC;IACnD,CAAC,MAAM,IAAGN,QAAQ,KAAKE,eAAe,EAAE;MACpCI,KAAK,CAAC,+BAA+B,CAAC;MACtCP,UAAU,CAACQ,QAAQ,CAAC,OAAO,CAAC;IAChC,CAAC,MAAM,IAAIP,QAAQ,IAAIE,eAAe,EAAE;MACpCI,KAAK,CAAC,wBAAwB,CAAC;IACnC;EACJ,CAAC;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAIZ,KAAK,CAACc,SAAU;IAAA,WAC3B,KAAC,KAAK;MACF,KAAK,EAAC,SAAS;MACf,UAAU,EAAC,cAAc;MACzB,QAAQ,EAAE,EAAG;MAAA,UAAC;IAAc,EAAQ,EACxC,KAAC,QAAQ;MACL,WAAW,EAAG,UAAU;MACxB,YAAY,EAAC,UAAU;MACvB,eAAe,EAAE,IAAK;MACtB,YAAY,EAAI,sBAACC,IAAI;QAAA,OAAKR,WAAW,CAACQ,IAAI,CAAC;MAAA;IAAC,EAC9C,EACF,KAAC,QAAQ;MACL,WAAW,EAAG,kBAAkB;MAChC,YAAY,EAAC,UAAU;MACvB,YAAY,EAAI,sBAACA,IAAI;QAAA,OAAIN,kBAAkB,CAACM,IAAI,CAAC;MAAA,CAAC;MAClD,eAAe,EAAE;IAAK,EACxB,EACF,KAAC,SAAS;MAAC,OAAO,EAAE,mBAAM;QAAEL,gBAAgB,EAAE;MAAC,CAAE;MAAA,UAAC;IAAM,EAAY;EAAA,EACjE;AAEf"},"metadata":{},"sourceType":"module"}