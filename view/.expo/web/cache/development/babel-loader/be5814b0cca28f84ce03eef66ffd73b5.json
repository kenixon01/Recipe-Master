{"ast":null,"code":"import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RegisterScreen from \"./components/auth/Screens/register/Register\";\nimport LoginScreen from \"./components/auth/Screens/login/Login\";\nimport ForgotPasswordScreen from \"./components/auth/Screens/forgotPassword/ForgotPassword\";\nimport NavigationBar from \"./components/auth/nav/NavigationBar\";\nimport ResetPasswordScreen from \"./components/auth/Screens/resetPassword/ResetPassword\";\nimport VerifyCodeScreen from \"./components/auth/Screens/codeEntry/VerifyCode\";\nimport { store } from \"./redux/store\";\nimport { ApolloProvider } from '@apollo/client';\nimport clients from \"./Apollo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport var Auth = function Auth() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ForgotPassword\",\n      component: ForgotPasswordScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ResetPassword\",\n      component: ResetPasswordScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"CodeEntry\",\n      component: VerifyCodeScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\nvar App = function App() {\n  return _jsx(ApolloProvider, {\n    client: clients,\n    children: _jsx(Provider, {\n      store: store,\n      children: _jsx(NavigationContainer, {\n        independent: true,\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Auth\",\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Auth\",\n            component: Auth,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Main\",\n            component: NavigationBar,\n            options: {\n              headerShown: false\n            }\n          })]\n        })\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","Provider","NavigationContainer","createStackNavigator","RegisterScreen","LoginScreen","ForgotPasswordScreen","NavigationBar","ResetPasswordScreen","VerifyCodeScreen","store","ApolloProvider","clients","Stack","Auth","headerShown","App"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/App.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\n\r\n// imports Screens form components \r\nimport RegisterScreen from './components/auth/Screens/register/Register';\r\nimport LoginScreen from './components/auth/Screens/login/Login';\r\nimport ForgotPasswordScreen from './components/auth/Screens/forgotPassword/ForgotPassword';\r\nimport NavigationBar from './components/auth/nav/NavigationBar';\r\nimport ResetPasswordScreen from \"./components/auth/Screens/resetPassword/ResetPassword\"\r\nimport VerifyCodeScreen from \"./components/auth/Screens/codeEntry/VerifyCode\"\r\nimport { store } from './redux/store'\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport clients from './Apollo';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n\r\nexport const Auth = () => {\r\n  //Stack Nav for Login and Sign up from Splash \r\n  return (\r\n    <Stack.Navigator initialRouteName='Login'>\r\n      <Stack.Screen name = \"Login\" component = {LoginScreen} options= {{headerShown: false}}/>\r\n      <Stack.Screen name = \"Register\" component = {RegisterScreen} options= {{headerShown: false}}/>\r\n      <Stack.Screen name = \"ForgotPassword\" component = {ForgotPasswordScreen} options= {{headerShown: false}}/>\r\n      <Stack.Screen name = \"ResetPassword\" component = {ResetPasswordScreen} options= {{headerShown: false}}/>\r\n      <Stack.Screen name = \"CodeEntry\" component = {VerifyCodeScreen} options= {{headerShown: false}}/>\r\n    </Stack.Navigator>\r\n  )\r\n} \r\n\r\nconst App = () => {\r\n  \r\n  return(  \r\n    <ApolloProvider client={clients}>\r\n      <Provider store = {store}>\r\n      <NavigationContainer independent={true}>\r\n        <Stack.Navigator initialRouteName=\"Auth\" screenOptions={{headerShown: false}}>\r\n          {/* Auth Navigator: Include Login and Signup */}\r\n          <Stack.Screen name=\"Auth\" component={Auth} options={{headerShown: false}}/>\r\n          {/* Creates and establishes Home screen along with bottom navigation */}\r\n          <Stack.Screen name = \"Main\" component={NavigationBar} options = {{headerShown: false}} />\r\n        \r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </Provider>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,oBAAoB,QAAO,yBAAyB;AAG5D,OAAOC,cAAc;AACrB,OAAOC,WAAW;AAClB,OAAOC,oBAAoB;AAC3B,OAAOC,aAAa;AACpB,OAAOC,mBAAmB;AAC1B,OAAOC,gBAAgB;AACvB,SAASC,KAAK;AACd,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAOC,OAAO;AAAiB;AAAA;AAE/B,IAAMC,KAAK,GAAGV,oBAAoB,EAAE;AAGpC,OAAO,IAAMW,IAAI,GAAG,SAAPA,IAAI,GAAS;EAExB,OACE,MAAC,KAAK,CAAC,SAAS;IAAC,gBAAgB,EAAC,OAAO;IAAA,WACvC,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,OAAO;MAAC,SAAS,EAAIT,WAAY;MAAC,OAAO,EAAG;QAACU,WAAW,EAAE;MAAK;IAAE,EAAE,EACxF,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,UAAU;MAAC,SAAS,EAAIX,cAAe;MAAC,OAAO,EAAG;QAACW,WAAW,EAAE;MAAK;IAAE,EAAE,EAC9F,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,gBAAgB;MAAC,SAAS,EAAIT,oBAAqB;MAAC,OAAO,EAAG;QAACS,WAAW,EAAE;MAAK;IAAE,EAAE,EAC1G,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,eAAe;MAAC,SAAS,EAAIP,mBAAoB;MAAC,OAAO,EAAG;QAACO,WAAW,EAAE;MAAK;IAAE,EAAE,EACxG,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,WAAW;MAAC,SAAS,EAAIN,gBAAiB;MAAC,OAAO,EAAG;QAACM,WAAW,EAAE;MAAK;IAAE,EAAE;EAAA,EACjF;AAEtB,CAAC;AAED,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAEhB,OACE,KAAC,cAAc;IAAC,MAAM,EAAEJ,OAAQ;IAAA,UAC9B,KAAC,QAAQ;MAAC,KAAK,EAAIF,KAAM;MAAA,UACzB,KAAC,mBAAmB;QAAC,WAAW,EAAE,IAAK;QAAA,UACrC,MAAC,KAAK,CAAC,SAAS;UAAC,gBAAgB,EAAC,MAAM;UAAC,aAAa,EAAE;YAACK,WAAW,EAAE;UAAK,CAAE;UAAA,WAE3E,KAAC,KAAK,CAAC,MAAM;YAAC,IAAI,EAAC,MAAM;YAAC,SAAS,EAAED,IAAK;YAAC,OAAO,EAAE;cAACC,WAAW,EAAE;YAAK;UAAE,EAAE,EAE3E,KAAC,KAAK,CAAC,MAAM;YAAC,IAAI,EAAG,MAAM;YAAC,SAAS,EAAER,aAAc;YAAC,OAAO,EAAI;cAACQ,WAAW,EAAE;YAAK;UAAE,EAAG;QAAA;MAEvE;IACE;EACb,EACI;AAErB,CAAC;AAED,eAAeC,GAAG"},"metadata":{},"sourceType":"module"}