{"ast":null,"code":"import { useEffect, useRef } from 'react';\nvar creteUseTimer = function creteUseTimer(clear, runTimer) {\n  return function (callback, delay) {\n    var timerRef = useRef();\n    useEffect(function () {\n      var stop = function stop() {\n        return clear(timerRef.current);\n      };\n      stop();\n      timerRef.current = runTimer(callback, delay);\n      return stop;\n    }, [delay]);\n  };\n};\nexport var useInterval = creteUseTimer(clearInterval, setInterval);\nexport var useTimeout = creteUseTimer(clearTimeout, setTimeout);","map":{"version":3,"names":["useEffect","useRef","creteUseTimer","clear","runTimer","callback","delay","timerRef","stop","current","useInterval","clearInterval","setInterval","useTimeout","clearTimeout","setTimeout"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/node_modules/react-native-confirmation-code-field/esm/useTimer.js"],"sourcesContent":["import {useEffect, useRef} from 'react';\r\nconst creteUseTimer = (clear, runTimer) => (callback, delay) => {\r\n  const timerRef = useRef();\r\n  useEffect(() => {\r\n    const stop = () => clear(timerRef.current);\r\n    stop();\r\n    timerRef.current = runTimer(callback, delay);\r\n    return stop;\r\n  }, [delay]);\r\n};\r\nexport const useInterval = creteUseTimer(\r\n  // @ts-expect-error - I know better\r\n  clearInterval,\r\n  setInterval,\r\n);\r\nexport const useTimeout = creteUseTimer(\r\n  // @ts-expect-error - I know better\r\n  clearTimeout,\r\n  setTimeout,\r\n);\r\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,MAAM,QAAO,OAAO;AACvC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAK,EAAEC,QAAQ;EAAA,OAAK,UAACC,QAAQ,EAAEC,KAAK,EAAK;IAC9D,IAAMC,QAAQ,GAAGN,MAAM,EAAE;IACzBD,SAAS,CAAC,YAAM;MACd,IAAMQ,IAAI,GAAG,SAAPA,IAAI;QAAA,OAASL,KAAK,CAACI,QAAQ,CAACE,OAAO,CAAC;MAAA;MAC1CD,IAAI,EAAE;MACND,QAAQ,CAACE,OAAO,GAAGL,QAAQ,CAACC,QAAQ,EAAEC,KAAK,CAAC;MAC5C,OAAOE,IAAI;IACb,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EACb,CAAC;AAAA;AACD,OAAO,IAAMI,WAAW,GAAGR,aAAa,CAEtCS,aAAa,EACbC,WAAW,CACZ;AACD,OAAO,IAAMC,UAAU,GAAGX,aAAa,CAErCY,YAAY,EACZC,UAAU,CACX"},"metadata":{},"sourceType":"module"}