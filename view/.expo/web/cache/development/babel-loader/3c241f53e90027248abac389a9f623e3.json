{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport style from \"./style\";\nimport sendEmail from \"../../sendEmail\";\nimport { useDispatch } from \"react-redux\";\nimport { setVerifcationCode } from \"../../../../actions\";\nimport { Title, InputBox, AppButton } from \"../../lib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ForgotPassword(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var dispatch = useDispatch();\n  var handleVerificationCode = function handleVerificationCode(data) {\n    dispatch(setVerifcationCode(data));\n  };\n  var verify = function verify() {\n    if (email && email.includes('@')) {\n      handleVerificationCode(sendEmail(email));\n      Alert.alert(\"\", 'Reset password email successfully sent.  Allow a few minutes to recieve the verification code.');\n      navigation.navigate('CodeEntry');\n    } else {\n      Alert.alert(\"\", \"Invalid email address\");\n    }\n  };\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsx(Title, {\n      fontFamily: 'PTSansNarrow',\n      fontSize: 40,\n      color: '#4F5200',\n      children: \"Forgot Password\"\n    }), _jsx(InputBox, {\n      placeholder: \"Email\",\n      keyboardType: \"email-address\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(AppButton, {\n      onPress: function onPress() {\n        verify();\n      },\n      children: \"Submit\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","style","sendEmail","useDispatch","setVerifcationCode","Title","InputBox","AppButton","ForgotPassword","navigation","email","setEmail","dispatch","handleVerificationCode","data","verify","includes","Alert","alert","navigate","container","text"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/components/auth/Screens/forgotPassword/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Alert } from \"react-native\";\r\nimport style from './style'\r\nimport sendEmail from \"../../sendEmail\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setVerifcationCode } from \"../../../../actions\";\r\nimport { Title, InputBox, AppButton } from \"../../lib\";\r\n\r\nexport default function ForgotPassword({navigation}) {\r\n    const [email, setEmail] = useState('')\r\n    \r\n    const dispatch = useDispatch();\r\n  \r\n    const handleVerificationCode = (data) => {\r\n      dispatch(setVerifcationCode(data))\r\n    }\r\n\r\n    const verify = () => {\r\n        if(email && email.includes('@')) {\r\n            handleVerificationCode(sendEmail(email))\r\n            Alert.alert(\"\",'Reset password email successfully sent.  Allow a few minutes to recieve the verification code.')\r\n            navigation.navigate('CodeEntry')\r\n        }\r\n        else {\r\n            Alert.alert(\"\",\"Invalid email address\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style = {style.container}>\r\n            <Title \r\n                fontFamily={'PTSansNarrow'}\r\n                fontSize={40}\r\n                color={'#4F5200'}>Forgot Password</Title>\r\n            <InputBox\r\n                placeholder = \"Email\"\r\n                keyboardType={\"email-address\"}\r\n                onChangeText = {(text) => setEmail(text)}\r\n            />\r\n            <AppButton onPress={() => {verify()}}>Submit</AppButton>\r\n        </View>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,OAAOC,KAAK;AACZ,OAAOC,SAAS;AAChB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,kBAAkB;AAC3B,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAS;AAAoB;AAAA;AAEvD,eAAe,SAASC,cAAc,OAAe;EAAA,IAAbC,UAAU,QAAVA,UAAU;EAC9C,gBAA0BT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BU,KAAK;IAAEC,QAAQ;EAEtB,IAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9B,IAAMU,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,IAAI,EAAK;IACvCF,QAAQ,CAACR,kBAAkB,CAACU,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,IAAMC,MAAM,GAAG,SAATA,MAAM,GAAS;IACjB,IAAGL,KAAK,IAAIA,KAAK,CAACM,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC7BH,sBAAsB,CAACX,SAAS,CAACQ,KAAK,CAAC,CAAC;MACxCO,KAAK,CAACC,KAAK,CAAC,EAAE,EAAC,gGAAgG,CAAC;MAChHT,UAAU,CAACU,QAAQ,CAAC,WAAW,CAAC;IACpC,CAAC,MACI;MACDF,KAAK,CAACC,KAAK,CAAC,EAAE,EAAC,uBAAuB,CAAC;IAC3C;EACJ,CAAC;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAIjB,KAAK,CAACmB,SAAU;IAAA,WAC3B,KAAC,KAAK;MACF,UAAU,EAAE,cAAe;MAC3B,QAAQ,EAAE,EAAG;MACb,KAAK,EAAE,SAAU;MAAA,UAAC;IAAe,EAAQ,EAC7C,KAAC,QAAQ;MACL,WAAW,EAAG,OAAO;MACrB,YAAY,EAAE,eAAgB;MAC9B,YAAY,EAAI,sBAACC,IAAI;QAAA,OAAKV,QAAQ,CAACU,IAAI,CAAC;MAAA;IAAC,EAC3C,EACF,KAAC,SAAS;MAAC,OAAO,EAAE,mBAAM;QAACN,MAAM,EAAE;MAAA,CAAE;MAAA,UAAC;IAAM,EAAY;EAAA,EACrD;AAEf"},"metadata":{},"sourceType":"module"}