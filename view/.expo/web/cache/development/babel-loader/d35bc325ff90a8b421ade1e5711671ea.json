{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"./style\";\nimport { useFonts } from 'expo-font';\nimport { useDispatch } from 'react-redux';\nimport { setDeleteAcct } from \"../../../../actions/index\";\nimport style from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useFonts = useFonts({\n      CairoPlay: require(\"../../../../assets/fonts/CairoPlay-ExtraBold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    shouldshow = _useState2[0],\n    setshouldShow = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isShowing = _useState4[0],\n    setIsShowing = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isOn = _useState6[0],\n    setIsOn = _useState6[1];\n  var onToggleSwitch = function onToggleSwitch() {\n    return setIsOn(!isOn);\n  };\n  var dispatch = useDispatch();\n  var handleDeleteAcct = function handleDeleteAcct(data) {\n    dispatch(setDeleteAcct(data));\n  };\n  var handleLogout = function handleLogout() {\n    handleDeleteAcct(true);\n  };\n  if (!loaded) {\n    return null;\n  }\n  return _jsx(SafeAreaView, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {}), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return Alert.alert('Delete Account ?!?', 'Are you sure you want to delete your account?', [{\n                text: 'Cancel',\n                onPress: function onPress() {\n                  return console.log('Cancel Pressed!');\n                }\n              }, {\n                text: 'Confirm',\n                onPress: function onPress() {\n                  return handleLogout();\n                }\n              }], {\n                cancelable: false\n              });\n            },\n            children: _jsx(Text, {\n              style: styles.deleteText,\n              children: \"Delete Account?\"\n            })\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","styles","useFonts","useDispatch","setDeleteAcct","style","SettingsScreen","navigation","CairoPlay","require","loaded","shouldshow","setshouldShow","isShowing","setIsShowing","isOn","setIsOn","onToggleSwitch","dispatch","handleDeleteAcct","data","handleLogout","container","Alert","alert","text","onPress","console","log","cancelable","deleteText"],"sources":["C:/Users/minix/OneDrive/Documents/GitHub/Recipe-Master/components/auth/Screens/settings/Setting.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Switch, Alert, ScrollView, SafeAreaView } from 'react-native';\r\nimport styles from './style';\r\nimport { useFonts } from 'expo-font';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setDeleteAcct } from '../../../../actions/index';\r\nimport style from './style';\r\n\r\nexport default function SettingsScreen ({navigation}){\r\n    const [loaded] = useFonts({\r\n        CairoPlay: require('../../../../assets/fonts/CairoPlay-ExtraBold.ttf'),\r\n    });\r\n\r\n    const [shouldshow, setshouldShow] = useState(false);\r\n    //const [darkMode, setDarkMode] = useState(false);\r\n    const [isShowing, setIsShowing] = useState(false);\r\n\r\n    const [isOn , setIsOn] = useState(false);\r\n    const onToggleSwitch = () => setIsOn(!isOn);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDeleteAcct = (data) => {\r\n      dispatch(setDeleteAcct(data))\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        handleDeleteAcct(true);\r\n        // navigation.navigate(\"Login\");\r\n        // Alert.alert('Account has been deleted',\r\n        // [ {text: 'Okay'} ],\r\n        //   { cancelable: false })\r\n    }\r\n\r\n    if(!loaded) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView>\r\n                <View style = {styles.container}>\r\n                    <View>\r\n\r\n                    </View>\r\n                    \r\n                        <View>\r\n                            <TouchableOpacity\r\n                                onPress={() => Alert.alert(\r\n                                    'Delete Account ?!?',\r\n                                    'Are you sure you want to delete your account?',\r\n                                    [\r\n                                        {text: 'Cancel', onPress: () => console.log('Cancel Pressed!')},\r\n                                        {text: 'Confirm', onPress: () => handleLogout() },\r\n                                    ],\r\n                                    { cancelable: false }\r\n                                )}>\r\n                                <Text style = {styles.deleteText}>Delete Account?</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    {/* <View style = {{flexDirection: 'row', justifyContent:'space-evenly'}} > */}\r\n                    {/* <TouchableOpacity >\r\n                        <View style = {styles.button}>\r\n                            <Text style = {styles.button_label}>Sign out</Text>           \r\n                        </View>\r\n                    </TouchableOpacity> */}\r\n                    {/* <TouchableOpacity >\r\n                        <View style = {styles.button}>\r\n                            <Text style = {styles.button_Delete}>Delete Account</Text>           \r\n                        </View>\r\n                    </TouchableOpacity> */}\r\n                    {/* </View> */}\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjC,OAAOC,MAAM;AACb,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa;AACtB,OAAOC,KAAK;AAAgB;AAAA;AAE5B,eAAe,SAASC,cAAc,OAAe;EAAA,IAAZC,UAAU,QAAVA,UAAU;EAC/C,gBAAiBL,QAAQ,CAAC;MACtBM,SAAS,EAAEC,OAAO;IACtB,CAAC,CAAC;IAAA;IAFKC,MAAM;EAIb,gBAAoCV,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CW,UAAU;IAAEC,aAAa;EAEhC,iBAAkCZ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1Ca,SAAS;IAAEC,YAAY;EAE9B,iBAAyBd,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAjCe,IAAI;IAAGC,OAAO;EACrB,IAAMC,cAAc,GAAG,SAAjBA,cAAc;IAAA,OAASD,OAAO,CAAC,CAACD,IAAI,CAAC;EAAA;EAE3C,IAAMG,QAAQ,GAAGf,WAAW,EAAE;EAE9B,IAAMgB,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,IAAI,EAAK;IACjCF,QAAQ,CAACd,aAAa,CAACgB,IAAI,CAAC,CAAC;EAC/B,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;IACvBF,gBAAgB,CAAC,IAAI,CAAC;EAK1B,CAAC;EAED,IAAG,CAACT,MAAM,EAAE;IACR,OAAO,IAAI;EACf;EAEA,OACI,KAAC,YAAY;IAAA,UACT,KAAC,UAAU;MAAA,UACP,MAAC,IAAI;QAAC,KAAK,EAAIT,MAAM,CAACqB,SAAU;QAAA,WAC5B,KAAC,IAAI,KAEE,EAEH,KAAC,IAAI;UAAA,UACD,KAAC,gBAAgB;YACb,OAAO,EAAE;cAAA,OAAMC,KAAK,CAACC,KAAK,CACtB,oBAAoB,EACpB,+CAA+C,EAC/C,CACI;gBAACC,IAAI,EAAE,QAAQ;gBAAEC,OAAO,EAAE;kBAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;gBAAA;cAAA,CAAC,EAC/D;gBAACH,IAAI,EAAE,SAAS;gBAAEC,OAAO,EAAE;kBAAA,OAAML,YAAY,EAAE;gBAAA;cAAC,CAAC,CACpD,EACD;gBAAEQ,UAAU,EAAE;cAAM,CAAC,CACxB;YAAA,CAAC;YAAA,UACF,KAAC,IAAI;cAAC,KAAK,EAAI5B,MAAM,CAAC6B,UAAW;cAAA,UAAC;YAAe;UAAO;QACzC,EAChB;MAAA;IAaR;EACE,EACF;AAEvB"},"metadata":{},"sourceType":"module"}