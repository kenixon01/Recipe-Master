{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Spinner = function Spinner(_ref) {\n  var _ref$cancelable = _ref.cancelable,\n    cancelable = _ref$cancelable === void 0 ? false : _ref$cancelable,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'white' : _ref$color,\n    _ref$animation = _ref.animation,\n    animation = _ref$animation === void 0 ? 'none' : _ref$animation,\n    _ref$overlayColor = _ref.overlayColor,\n    overlayColor = _ref$overlayColor === void 0 ? 'rgba(0, 0, 0, 0.25)' : _ref$overlayColor,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'large' : _ref$size,\n    _ref$textContent = _ref.textContent,\n    textContent = _ref$textContent === void 0 ? '' : _ref$textContent,\n    textStyle = _ref.textStyle,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? false : _ref$visible,\n    indicatorStyle = _ref.indicatorStyle,\n    customIndicator = _ref.customIndicator,\n    children = _ref.children,\n    spinnerKey = _ref.spinnerKey;\n  var _React$useState = React.useState(visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    spinnerVisible = _React$useState2[0],\n    setSpinnerVisibility = _React$useState2[1];\n  var close = function close() {\n    setSpinnerVisibility(false);\n  };\n  var _handleOnRequestClose = function _handleOnRequestClose() {\n    if (cancelable) {\n      close();\n    }\n  };\n  React.useEffect(function () {\n    setSpinnerVisibility(visible);\n  }, [visible]);\n  var _renderDefaultContent = function _renderDefaultContent() {\n    return _jsxs(View, {\n      style: styles.background,\n      children: [customIndicator || _jsx(ActivityIndicator, {\n        color: color,\n        size: size,\n        style: [styles.activityIndicator, _objectSpread({}, indicatorStyle)]\n      }), _jsx(View, {\n        style: [styles.textContainer, _objectSpread({}, indicatorStyle)],\n        children: _jsx(Text, {\n          style: [styles.textContent, textStyle],\n          children: textContent\n        })\n      })]\n    });\n  };\n  var _renderSpinner = function _renderSpinner() {\n    var spinner = _jsx(View, {\n      style: [styles.container, {\n        backgroundColor: overlayColor\n      }],\n      children: children || _renderDefaultContent()\n    }, spinnerKey || \"spinner_\" + Date.now());\n    return _jsx(Modal, {\n      animationType: animation,\n      onRequestClose: function onRequestClose() {\n        _handleOnRequestClose();\n      },\n      supportedOrientations: ['landscape', 'portrait'],\n      transparent: true,\n      visible: spinnerVisible,\n      statusBarTranslucent: true,\n      children: spinner\n    });\n  };\n  return _renderSpinner();\n};\nexport default Spinner;","map":{"version":3,"names":["React","styles","Spinner","cancelable","color","animation","overlayColor","size","textContent","textStyle","visible","indicatorStyle","customIndicator","children","spinnerKey","useState","spinnerVisible","setSpinnerVisibility","close","_handleOnRequestClose","useEffect","_renderDefaultContent","background","activityIndicator","textContainer","_renderSpinner","spinner","container","backgroundColor","Date","now"],"sources":["C:/Users/minix/OneDrive/Documents/GitHub/Recipe-Master/node_modules/react-native-loading-spinner-overlay/src/index.tsx"],"sourcesContent":["/* eslint @typescript-eslint/prefer-nullish-coalescing: 0 */\nimport * as React from 'react';\nimport {\n  View,\n  Text,\n  Modal,\n  ActivityIndicator,\n  TextStyle,\n  ViewStyle\n} from 'react-native';\nimport styles from './style';\n\nexport interface SpinnerPropTypes {\n  cancelable?: boolean;\n  color?: string;\n  animation?: 'none' | 'slide' | 'fade';\n  overlayColor?: string;\n  size?: 'small' | 'large' | number; // size props does not support value normal\n  textContent?: string;\n  textStyle?: TextStyle;\n  visible?: boolean;\n  indicatorStyle?: ViewStyle;\n  customIndicator?: React.ReactNode;\n  children?: React.ReactNode;\n  spinnerKey?: string;\n}\n\nconst Spinner = ({\n  cancelable = false,\n  color = 'white',\n  animation = 'none',\n  overlayColor = 'rgba(0, 0, 0, 0.25)',\n  size = 'large',\n  textContent = '',\n  textStyle,\n  visible = false,\n  indicatorStyle,\n  customIndicator,\n  children,\n  spinnerKey\n}: SpinnerPropTypes) => {\n  const [spinnerVisible, setSpinnerVisibility] = React.useState(visible);\n  const close = () => {\n    setSpinnerVisibility(false);\n  };\n\n  const _handleOnRequestClose = () => {\n    if (cancelable) {\n      close();\n    }\n  };\n\n  React.useEffect(() => {\n    setSpinnerVisibility(visible);\n  }, [visible]);\n  const _renderDefaultContent = () => {\n    return (\n      <View style={styles.background}>\n        {customIndicator || (\n          <ActivityIndicator\n            color={color}\n            size={size}\n            style={[styles.activityIndicator, { ...indicatorStyle }]}\n          />\n        )}\n        <View style={[styles.textContainer, { ...indicatorStyle }]}>\n          <Text style={[styles.textContent, textStyle]}>{textContent}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  const _renderSpinner = () => {\n    const spinner = (\n      <View\n        style={[styles.container, { backgroundColor: overlayColor }]}\n        key={spinnerKey || `spinner_${Date.now()}`}\n      >\n        {children || _renderDefaultContent()}\n      </View>\n    );\n\n    return (\n      <Modal\n        animationType={animation}\n        onRequestClose={() => {\n          _handleOnRequestClose();\n        }}\n        supportedOrientations={['landscape', 'portrait']}\n        transparent\n        visible={spinnerVisible}\n        statusBarTranslucent={true}\n      >\n        {spinner}\n      </Modal>\n    );\n  };\n\n  return _renderSpinner();\n};\n\nexport default Spinner;\n"],"mappings":";;;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAS/B,OAAOC,MAAM;AAAgB;AAAA;AAiB7B,IAAMC,OAAO,GAAG,SAAVA,OAAO,OAaW;EAAA,2BAZtBC,UAAU;IAAVA,UAAU,gCAAG,KAAK;IAAA,kBAClBC,KAAK;IAALA,KAAK,2BAAG,OAAO;IAAA,sBACfC,SAAS;IAATA,SAAS,+BAAG,MAAM;IAAA,yBAClBC,YAAY;IAAZA,YAAY,kCAAG,qBAAqB;IAAA,iBACpCC,IAAI;IAAJA,IAAI,0BAAG,OAAO;IAAA,wBACdC,WAAW;IAAXA,WAAW,iCAAG,EAAE;IAChBC,SAAS,QAATA,SAAS;IAAA,oBACTC,OAAO;IAAPA,OAAO,6BAAG,KAAK;IACfC,cAAc,QAAdA,cAAc;IACdC,eAAe,QAAfA,eAAe;IACfC,QAAQ,QAARA,QAAQ;IACRC,UAAU,QAAVA,UAAU;EAEV,sBAA+Cd,KAAK,CAACe,QAAQ,CAACL,OAAO,CAAC;IAAA;IAA/DM,cAAc;IAAEC,oBAAoB;EAC3C,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;IAClBD,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,IAAME,qBAAqB,GAAG,SAAxBA,qBAAqB,GAAS;IAClC,IAAIhB,UAAU,EAAE;MACde,KAAK,EAAE;IACT;EACF,CAAC;EAEDlB,KAAK,CAACoB,SAAS,CAAC,YAAM;IACpBH,oBAAoB,CAACP,OAAO,CAAC;EAC/B,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACb,IAAMW,qBAAqB,GAAG,SAAxBA,qBAAqB,GAAS;IAClC,OACE,MAAC,IAAI;MAAC,KAAK,EAAEpB,MAAM,CAACqB,UAAW;MAAA,WAC5BV,eAAe,IACd,KAAC,iBAAiB;QAChB,KAAK,EAAER,KAAM;QACb,IAAI,EAAEG,IAAK;QACX,KAAK,EAAE,CAACN,MAAM,CAACsB,iBAAiB,oBAAOZ,cAAc;MAAI,EAE5D,EACD,KAAC,IAAI;QAAC,KAAK,EAAE,CAACV,MAAM,CAACuB,aAAa,oBAAOb,cAAc,EAAI;QAAA,UACzD,KAAC,IAAI;UAAC,KAAK,EAAE,CAACV,MAAM,CAACO,WAAW,EAAEC,SAAS,CAAE;UAAA,UAAED;QAAW;MAAQ,EAC7D;IAAA,EACF;EAEX,CAAC;EAED,IAAMiB,cAAc,GAAG,SAAjBA,cAAc,GAAS;IAC3B,IAAMC,OAAO,GACX,KAAC,IAAI;MACH,KAAK,EAAE,CAACzB,MAAM,CAAC0B,SAAS,EAAE;QAAEC,eAAe,EAAEtB;MAAa,CAAC,CAAE;MAAA,UAG5DO,QAAQ,IAAIQ,qBAAqB;IAAE,GAF/BP,UAAU,iBAAee,IAAI,CAACC,GAAG,EAAI,CAI7C;IAED,OACE,KAAC,KAAK;MACJ,aAAa,EAAEzB,SAAU;MACzB,cAAc,EAAE,0BAAM;QACpBc,qBAAqB,EAAE;MACzB,CAAE;MACF,qBAAqB,EAAE,CAAC,WAAW,EAAE,UAAU,CAAE;MACjD,WAAW;MACX,OAAO,EAAEH,cAAe;MACxB,oBAAoB,EAAE,IAAK;MAAA,UAE1BU;IAAO,EACF;EAEZ,CAAC;EAED,OAAOD,cAAc,EAAE;AACzB,CAAC;AAED,eAAevB,OAAO"},"metadata":{},"sourceType":"module"}