{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRecentSearches } from \"../../../../actions/index\";\nimport { Tile } from '@rneui/themed';\nimport { Title } from \"../../lib\";\nimport styles from \"./style\";\nimport style from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Results(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    recipes = _useState2[0],\n    setRecipes = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentIndex = _useState4[0],\n    setCurrentIndex = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    modalVisible = _useState6[0],\n    setModalVisible = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    index = _useState8[0],\n    setIndex = _useState8[1];\n  var query = useSelector(function (store) {\n    return store.query;\n  });\n  var dispatch = useDispatch();\n  var handleRecentSearches = function handleRecentSearches(data) {\n    dispatch(setRecentSearches(data));\n  };\n  var fetchRecipes = function () {\n    var _ref2 = _asyncToGenerator(function* (index) {\n      try {\n        var URL = \"https://api.edamam.com/search?\" + \"q=\" + query + \"&app_id=\" + \"641facf1\" + \"&app_key=\" + \"3bd1c423730ce9650260fd3d5cdabe98\" + \"&to=\" + (index + \"15\") + \"&from=\" + index;\n        var response = yield fetch(URL);\n        var json = yield response.json();\n        handleRecentSearches(query);\n        return json.hits;\n      } catch (error) {\n        console.error(error);\n        return [];\n      }\n    });\n    return function fetchRecipes(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchRecipes(currentIndex).then(function (data) {\n      return setRecipes(data);\n    });\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Title, {\n      textAlign: \"center\",\n      fontFamily: \"PTSansNarrow\",\n      backgroundColor: \"black\",\n      color: \"white\",\n      children: \" Results\"\n    }), _jsx(FlatList, {\n      data: recipes,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n          index = _ref3.index;\n        return _jsx(View, {\n          style: {\n            flex: 2,\n            backgroundColor: 'black'\n          },\n          children: _jsx(Tile, {\n            imageSrc: {\n              uri: item.recipe.image\n            },\n            title: item.recipe.label + \" \\n \" + \"Calories: \" + Math.round(item.recipe.calories),\n            titleStyle: {\n              color: \"white\"\n            },\n            caption: item.recipe.calories,\n            onPress: function onPress() {\n              setModalVisible(true);\n              setIndex(index);\n            }\n          })\n        }, index);\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.recipe.uri;\n      },\n      extraData: currentIndex\n    }), _jsx(View, {\n      style: style.modalContainer,\n      children: _jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          Alert.alert('Modal has been closed');\n          setModalVisible(!modalVisible);\n        },\n        children: modalVisible ? _jsxs(View, {\n          style: style.modal,\n          children: [_jsx(Text, {\n            style: style.recipeLabel,\n            children: recipes[index].recipe.label\n          }), _jsxs(Text, {\n            style: style.recipeInfo,\n            children: [\"Cuisine: \", recipes[index].recipe.cuisineType]\n          }), _jsxs(Text, {\n            style: style.recipeInfo,\n            children: [\"Cook Time \", recipes[index].recipe.totalTime, \" minutes\"]\n          }), _jsxs(Text, {\n            style: style.recipeInfo,\n            children: [\"Serves \", recipes[index].recipe.yield]\n          }), _jsxs(Text, {\n            style: style.recipeInfo,\n            children: [recipes[index].recipe.calories, \" calories\"]\n          }), _jsx(Text, {\n            style: style.label,\n            children: recipes[index].recipe.url\n          }), recipes[index].recipe.ingredientLines.map(function (ingredient, index) {\n            return _jsx(Text, {\n              style: style.ingredient,\n              children: ingredient\n            }, index);\n          }), _jsx(Button, {\n            title: \"Hide modal\",\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            }\n          })]\n        }) : _jsx(View, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","setRecentSearches","Tile","Title","styles","style","Results","navigation","recipes","setRecipes","currentIndex","setCurrentIndex","modalVisible","setModalVisible","index","setIndex","query","store","dispatch","handleRecentSearches","data","fetchRecipes","URL","response","fetch","json","hits","error","console","then","container","item","flex","backgroundColor","uri","recipe","image","label","Math","round","calories","color","modalContainer","Alert","alert","modal","recipeLabel","recipeInfo","cuisineType","totalTime","yield","url","ingredientLines","map","ingredient"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/components/auth/Screens/results/Results.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button, FlatList, SafeAreaView, Modal, ScrollView } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setRecentSearches } from '../../../../actions/index';\r\nimport { Tile } from '@rneui/themed';\r\n\r\nimport {Title} from '../../lib';\r\nimport styles from './style'\r\nimport { API_ID, API_KEY, ENDPOINT, MAX_SEARCH_RESULTS } from '@env'\r\nimport style from './style';\r\n\r\nexport default function Results({navigation}){\r\n    const [recipes, setRecipes] = useState([])\r\n    const [currentIndex, setCurrentIndex] = useState(0)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [index, setIndex] = useState(0)\r\n    const query = useSelector((store) => store.query);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleRecentSearches = (data) => {\r\n        dispatch(setRecentSearches(data))\r\n    }\r\n\r\n    const fetchRecipes = async (index) => {\r\n        try {\r\n            const URL = `${ENDPOINT}q=${query}&app_id=${API_ID}&app_key=${API_KEY}&to=${index + MAX_SEARCH_RESULTS}&from=${index}`\r\n            const response = await fetch(URL)\r\n            const json = await response.json()\r\n            handleRecentSearches(query)\r\n            return json.hits\r\n        } catch (error) {\r\n            console.error(error)\r\n            return []\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRecipes(currentIndex).then(data => setRecipes(data))\r\n    }, [])\r\n    return (\r\n        <SafeAreaView style = {styles.container}>\r\n            <Title textAlign={\"center\"} fontFamily=\"PTSansNarrow\" backgroundColor={\"black\"} color={\"white\"}> Results</Title>\r\n            <FlatList \r\n                data={recipes}\r\n                renderItem={({item,index}) =>  \r\n                <View style = {{flex:2 , backgroundColor: 'black' }} key={index}>\r\n                    <Tile\r\n                        imageSrc={{uri: item.recipe.image}}\r\n                        title={item.recipe.label + \" \\n \"+ \"Calories: \"+ Math.round(item.recipe.calories)}\r\n                        titleStyle = {{color:\"white\"}}\r\n                        caption= {item.recipe.calories}\r\n                        onPress={() => {\r\n                            setModalVisible(true)\r\n                            setIndex(index)}}\r\n                    />\r\n                    </View>}\r\n                keyExtractor={item => item.recipe.uri}\r\n                extraData={currentIndex}\r\n            /> \r\n            <View style={style.modalContainer}>\r\n                <Modal\r\n                    animationType='slide'\r\n                    transparent={true}\r\n                    visible={modalVisible}\r\n                    onRequestClose={() => {\r\n                        Alert.alert('Modal has been closed')\r\n                        setModalVisible(!modalVisible)\r\n                    }}>\r\n                    {\r\n                        (modalVisible) ?\r\n                            <View style={style.modal}>\r\n                                <Text style={style.recipeLabel}>{recipes[index].recipe.label}</Text>\r\n                                <Text style={style.recipeInfo}>Cuisine: {recipes[index].recipe.cuisineType}</Text>\r\n                                <Text style={style.recipeInfo}>Cook Time {recipes[index].recipe.totalTime} minutes</Text>\r\n                                <Text style={style.recipeInfo}>Serves {recipes[index].recipe.yield}</Text>\r\n                                <Text style={style.recipeInfo}>{recipes[index].recipe.calories} calories</Text>\r\n                                <Text style={style.label}>{recipes[index].recipe.url}</Text>\r\n                        \r\n                                {recipes[index].recipe.ingredientLines.map((ingredient, index) => {\r\n                                    return <Text key={index} style={style.ingredient}>{ingredient}</Text>\r\n                                })}\r\n\r\n                                <Button title=\"Hide modal\" onPress={() => setModalVisible(!modalVisible)}/> \r\n                            </View>\r\n                        : <View></View>\r\n                    }\r\n                </Modal>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}