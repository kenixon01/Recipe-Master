{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport style from \"./style\";\nimport * as Font from 'expo-font';\nimport { InputBox, AppButton, Title } from \"../../lib/index\";\nimport { gql, useMutation } from '@apollo/client';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SIGN_IN_MUTATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\nmutation SignIn($email: String!, $password: String!) {\\n  signIn(input: { email: $email, password: $password}) {\\n    token\\n    user {\\n      name\\n      email\\n    }\\n  }\\n}\\n\"])));\nexport function Login(_ref) {\n  var _this = this;\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useMutation = useMutation(SIGN_IN_MUTATION),\n    _useMutation2 = _slicedToArray(_useMutation, 2),\n    signIn = _useMutation2[0],\n    _useMutation2$ = _useMutation2[1],\n    data = _useMutation2$.data,\n    error = _useMutation2$.error,\n    loading = _useMutation2$.loading;\n  useEffect(function () {\n    if (error) {\n      Alert.alert('Invalid credentials, try again');\n    }\n  }, [error]);\n  if (data) {\n    AsyncStorage.setItem('token', data.signIn.token).then(function () {\n      navigation.navigate('Main');\n    });\n  }\n  var onSubmit = function onSubmit() {\n    signIn({\n      variables: {\n        email: email,\n        password: password\n      }\n    }).then(function (response) {\n      console.log(\"Response: \" + response);\n    }).catch(function (err) {\n      console.log(\"Error: \" + err);\n    });\n  };\n  validateFields = function validateFields() {\n    var _this$state = _this.state,\n      email = _this$state.email,\n      password = _this$state.password;\n    if (!email.trim() || !password.trim()) {\n      alert('No fields can remain blank');\n      return;\n    }\n  };\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fontLoaded = _useState6[0],\n    setFontLoaded = _useState6[1];\n  useEffect(function () {\n    function loadFont() {\n      return _loadFont.apply(this, arguments);\n    }\n    function _loadFont() {\n      _loadFont = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          'PTSansNarrow': require(\"../../../../assets/fonts/PTSansNarrow-Bold.ttf\")\n        });\n        setFontLoaded(true);\n      });\n      return _loadFont.apply(this, arguments);\n    }\n    loadFont();\n  }, []);\n  if (!fontLoaded) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsxs(ImageBackground, {\n    style: style.container,\n    resizeMode: 'cover',\n    source: require(\"../../../../assets/20221210_101358_HDR.jpg\"),\n    children: [_jsx(Title, {\n      fontFamily: \"PTSansNarrow\",\n      color: \"white\",\n      children: \"Recipe Master\"\n    }), _jsxs(View, {\n      style: style.containerBottom,\n      children: [_jsxs(View, {\n        style: style.loginContainer,\n        children: [_jsx(InputBox, {\n          keyboardType: \"email-address\",\n          placeholder: \"Email\",\n          value: email,\n          onChangeText: setEmail\n        }), _jsx(InputBox, {\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          value: password,\n          onChangeText: setPassword\n        }), _jsx(View, {\n          children: _jsx(Button, {\n            title: \"Forgot Password\",\n            onPress: function onPress() {\n              return navigation.navigate(\"ForgotPassword\");\n            },\n            type: \"clear\",\n            color: '#4F5200'\n          })\n        })]\n      }), _jsx(AppButton, {\n        onPress: function onPress() {\n          return onSubmit();\n        },\n        children: \"Login\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsx(Text, {\n          style: style.forgotAndSignUpText,\n          children: \"No Account?\"\n        }), _jsx(Text, {\n          style: style.SignUpText,\n          onPress: function onPress() {\n            return navigation.navigate(\"Register\");\n          },\n          children: \" Sign up \"\n        })]\n      })]\n    })]\n  });\n}\nexport default Login;","map":{"version":3,"names":["React","useEffect","useState","style","Font","InputBox","AppButton","Title","gql","useMutation","AsyncStorage","SIGN_IN_MUTATION","Login","navigation","email","setEmail","password","setPassword","signIn","data","error","loading","Alert","alert","setItem","token","then","navigate","onSubmit","variables","response","console","log","catch","err","validateFields","state","trim","fontLoaded","setFontLoaded","loadFont","loadAsync","require","container","containerBottom","loginContainer","flexDirection","forgotAndSignUpText","SignUpText"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/components/auth/Screens/login/Login.js"],"sourcesContent":["import React, { useEffect,useState } from 'react'\r\nimport { View, Button, Text, ImageBackground, ActivityIndicator, Alert} from 'react-native'\r\nimport style from './style'\r\nimport * as Font from 'expo-font';\r\nimport {InputBox, AppButton, Title} from '../../lib/index'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\n\r\nconst SIGN_IN_MUTATION = gql`\r\nmutation SignIn($email: String!, $password: String!) {\r\n  signIn(input: { email: $email, password: $password}) {\r\n    token\r\n    user {\r\n      name\r\n      email\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport function Login ({navigation}) {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signIn, {data, error, loading}] = useMutation(SIGN_IN_MUTATION)\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      Alert.alert('Invalid credentials, try again');\r\n      \r\n    }\r\n  },[error])\r\n\r\n  if (data) {\r\n    // save token\r\n    AsyncStorage\r\n      .setItem('token', data.signIn.token)\r\n      .then(() => {\r\n        // redirect home\r\n        navigation.navigate('Main')\r\n      })\r\n  }\r\n  \r\n  const onSubmit = () => {\r\n    signIn({variables: { email, password }})\r\n      .then(response => {\r\n        console.log(`Response: ${response}`)\r\n      })\r\n      .catch(err => {\r\n        console.log(`Error: ${err}`)\r\n      })\r\n  }\r\n\r\n  validateFields = () => {\r\n    const { email, password} = this.state;\r\n    if ( !email.trim() || !password.trim()){\r\n      alert('No fields can remain blank')\r\n      return;\r\n    }\r\n  }\r\n\r\n  const [fontLoaded, setFontLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function loadFont() {\r\n      await Font.loadAsync({\r\n        'PTSansNarrow': require('../../../../assets/fonts/PTSansNarrow-Bold.ttf'),\r\n      });\r\n\r\n      setFontLoaded(true);\r\n    }\r\n\r\n    loadFont();\r\n  }, []);\r\n\r\n  if (!fontLoaded) {\r\n    return <Text>Loading...</Text>;\r\n  }\r\n\r\n    return ( \r\n      <ImageBackground style = {style.container} resizeMode={'cover'} source={require('../../../../assets/20221210_101358_HDR.jpg' )}>\r\n        <Title fontFamily=\"PTSansNarrow\" color='white'>Recipe Master</Title>\r\n          <View style = {style.containerBottom}> \r\n          <View style= {style.loginContainer}>\r\n            <InputBox\r\n              keyboardType='email-address'\r\n              placeholder = \"Email\"\r\n              value={email}\r\n              onChangeText = {setEmail}\r\n            />\r\n            <InputBox\r\n              placeholder = \"Password\"\r\n              secureTextEntry = {true}\r\n              value={password}\r\n              onChangeText = {setPassword}\r\n            />\r\n            <View>\r\n              <Button\r\n                title='Forgot Password'\r\n                onPress={() => navigation.navigate(\"ForgotPassword\")}\r\n                type = 'clear'\r\n                color={'#4F5200'}\r\n              />\r\n            </View>\r\n          </View>\r\n          <AppButton\r\n            onPress = {() =>onSubmit()}\r\n          >Login</AppButton>\r\n          <View style = {{flexDirection: 'row'}}>\r\n            <Text style = {style.forgotAndSignUpText}>No Account?</Text>\r\n            <Text style = {style.SignUpText} onPress={() => navigation.navigate(\"Register\")}> Sign up </Text>\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\nexport default Login\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}