{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport style from \"./styles/tagStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default Tag = function Tag(_ref) {\n  var backgroundColor = _ref.backgroundColor,\n    key = _ref.key,\n    onPress = _ref.onPress,\n    children = _ref.children;\n  return _jsx(View, {\n    onPress: onPress,\n    style: _objectSpread(_objectSpread({}, style.tag), {}, {\n      backgroundColor: backgroundColor\n    }),\n    children: _jsx(Text, {\n      style: style.text,\n      children: children\n    })\n  }, key);\n};","map":{"version":3,"names":["React","style","Tag","backgroundColor","key","onPress","children","tag","text"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/components/auth/lib/Tag.js"],"sourcesContent":["import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport style from './styles/tagStyle'\r\n\r\nexport default Tag = ({backgroundColor, key, onPress, children}) => {\r\n  return (\r\n    <View \r\n        onPress={onPress} \r\n        key={key} \r\n        style = {{...style.tag, backgroundColor: backgroundColor}}>\r\n        <Text style={style.text}>{children}</Text>\r\n    </View> \r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,OAAOC,KAAK;AAAyB;AAErC,eAAeC,GAAG,GAAG,mBAA+C;EAAA,IAA7CC,eAAe,QAAfA,eAAe;IAAEC,GAAG,QAAHA,GAAG;IAAEC,OAAO,QAAPA,OAAO;IAAEC,QAAQ,QAARA,QAAQ;EAC5D,OACE,KAAC,IAAI;IACD,OAAO,EAAED,OAAQ;IAEjB,KAAK,kCAAQJ,KAAK,CAACM,GAAG;MAAEJ,eAAe,EAAEA;IAAe,EAAE;IAAA,UAC1D,KAAC,IAAI;MAAC,KAAK,EAAEF,KAAK,CAACO,IAAK;MAAA,UAAEF;IAAQ;EAAQ,GAFrCF,GAAG,CAGL;AAEX,CAAC"},"metadata":{},"sourceType":"module"}