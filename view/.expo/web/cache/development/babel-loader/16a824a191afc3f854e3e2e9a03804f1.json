{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport style from \"./style\";\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport { useSelector } from \"react-redux\";\nimport { Title, AppButton } from \"../../lib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar currentAttempt = 1;\nexport default function VerifyCode(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var verificationCode = useSelector(function (store) {\n    return store.verificationCode;\n  });\n  var CELL_COUNT = verificationCode.length;\n  var ref = useBlurOnFulfill({\n    value: value,\n    cellCount: CELL_COUNT\n  });\n  var _useClearByFocusCell = useClearByFocusCell({\n      value: value,\n      setValue: setValue\n    }),\n    _useClearByFocusCell2 = _slicedToArray(_useClearByFocusCell, 2),\n    props = _useClearByFocusCell2[0],\n    getCellOnLayoutHandler = _useClearByFocusCell2[1];\n  var validateCode = function validateCode() {\n    console.log(currentAttempt);\n    if (currentAttempt < \"3\") {\n      if (value.toUpperCase() === verificationCode.toUpperCase()) {\n        navigation.navigate('ResetPassword');\n      } else {\n        currentAttempt++;\n        Alert.alert(\"\", \"Invalid verification code.\");\n      }\n    } else {\n      Alert.alert(\"\", \"Verification code submission attempts exceeded.\");\n      navigation.navigate('Login');\n    }\n  };\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsx(Title, {\n      fontFamily: \"PTSansNarrow\",\n      color: \"#4F5200\",\n      fontSize: 40,\n      children: \"Enter Code\"\n    }), _jsx(SafeAreaView, {\n      style: styles.root,\n      children: _jsx(CodeField, _objectSpread(_objectSpread({\n        ref: ref\n      }, props), {}, {\n        caretHidden: false,\n        autoFocus: true,\n        value: value,\n        onChangeText: setValue,\n        cellCount: CELL_COUNT,\n        rootStyle: style.codeFieldRoot,\n        textContentType: \"oneTimeCode\",\n        renderCell: function renderCell(_ref2) {\n          var index = _ref2.index,\n            symbol = _ref2.symbol,\n            isFocused = _ref2.isFocused;\n          return _jsx(View, {\n            onLayout: getCellOnLayoutHandler(index),\n            children: _jsx(Text, {\n              style: [style.cell, isFocused && style.focusCell],\n              children: symbol || (isFocused ? _jsx(Cursor, {}) : null)\n            }, index)\n          }, index);\n        }\n      }))\n    }), _jsx(AppButton, {\n      onPress: function onPress() {\n        return validateCode();\n      },\n      children: \"Verify\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","style","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","useSelector","Title","AppButton","currentAttempt","VerifyCode","navigation","value","setValue","verificationCode","store","CELL_COUNT","length","ref","cellCount","props","getCellOnLayoutHandler","validateCode","console","log","toUpperCase","navigate","Alert","alert","container","styles","root","codeFieldRoot","index","symbol","isFocused","cell","focusCell"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/components/auth/Screens/codeEntry/VerifyCode.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, SafeAreaView, Alert } from \"react-native\";\r\nimport style from './style'\r\nimport {\r\n    CodeField,\r\n    Cursor,\r\n    useBlurOnFulfill,\r\n    useClearByFocusCell,\r\n  } from 'react-native-confirmation-code-field';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { VALIDATE_ATTEMPT_MAX } from '@env';\r\nimport { Title, AppButton } from \"../../lib\";\r\n\r\n\r\nvar currentAttempt = 1\r\n\r\nexport default function VerifyCode({navigation}) {\r\n    const [value, setValue] = useState('')\r\n    const verificationCode = useSelector((store) => store.verificationCode);\r\n    const CELL_COUNT = verificationCode.length\r\n\r\n    const ref = useBlurOnFulfill({value, cellCount: CELL_COUNT});\r\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({\r\n        value,\r\n        setValue,\r\n    });\r\n\r\n    const validateCode = () => {\r\n        console.log(currentAttempt)\r\n        if(currentAttempt < VALIDATE_ATTEMPT_MAX) {\r\n            if(value.toUpperCase() === verificationCode.toUpperCase()) {\r\n                navigation.navigate('ResetPassword')\r\n            } else {\r\n                currentAttempt++\r\n                Alert.alert(\"\",\"Invalid verification code.\")\r\n            }\r\n        }\r\n        else {\r\n            Alert.alert(\"\",\"Verification code submission attempts exceeded.\")\r\n            navigation.navigate('Login')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style = {style.container}>\r\n            <Title \r\n                fontFamily='PTSansNarrow' \r\n                color='#4F5200'\r\n                fontSize={40}>Enter Code</Title>\r\n            <SafeAreaView style={styles.root}>\r\n            <CodeField\r\n                ref={ref}\r\n                {...props}\r\n                caretHidden={false}\r\n                autoFocus={true}\r\n                value={value}\r\n                onChangeText={setValue}\r\n                cellCount={CELL_COUNT}\r\n                rootStyle={style.codeFieldRoot}\r\n                textContentType=\"oneTimeCode\"\r\n                renderCell={({index, symbol, isFocused}) => (\r\n                    <View\r\n                    key={index}\r\n                    onLayout={getCellOnLayoutHandler(index)}\r\n                    >\r\n                    <Text\r\n                        key={index}\r\n                        style={[style.cell, isFocused && style.focusCell]}>\r\n                        {symbol || (isFocused ? <Cursor /> : null)}\r\n                    </Text>\r\n                    </View>\r\n                            \r\n                )}\r\n            />\r\n            </SafeAreaView>\r\n            <AppButton onPress={() => validateCode()}>Verify</AppButton>\r\n        </View>\r\n    )\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAExC,OAAOC,KAAK;AACZ,SACIC,SAAS,EACTC,MAAM,EACNC,gBAAgB,EAChBC,mBAAmB,QACd,sCAAsC;AAE/C,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,KAAK,EAAEC,SAAS;AAAoB;AAAA;AAG7C,IAAIC,cAAc,GAAG,CAAC;AAEtB,eAAe,SAASC,UAAU,OAAe;EAAA,IAAbC,UAAU,QAAVA,UAAU;EAC1C,gBAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BY,KAAK;IAAEC,QAAQ;EACtB,IAAMC,gBAAgB,GAAGR,WAAW,CAAC,UAACS,KAAK;IAAA,OAAKA,KAAK,CAACD,gBAAgB;EAAA,EAAC;EACvE,IAAME,UAAU,GAAGF,gBAAgB,CAACG,MAAM;EAE1C,IAAMC,GAAG,GAAGd,gBAAgB,CAAC;IAACQ,KAAK,EAALA,KAAK;IAAEO,SAAS,EAAEH;EAAU,CAAC,CAAC;EAC5D,2BAAwCX,mBAAmB,CAAC;MACxDO,KAAK,EAALA,KAAK;MACLC,QAAQ,EAARA;IACJ,CAAC,CAAC;IAAA;IAHKO,KAAK;IAAEC,sBAAsB;EAKpC,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;IACvBC,OAAO,CAACC,GAAG,CAACf,cAAc,CAAC;IAC3B,IAAGA,cAAc,MAAuB,EAAE;MACtC,IAAGG,KAAK,CAACa,WAAW,EAAE,KAAKX,gBAAgB,CAACW,WAAW,EAAE,EAAE;QACvDd,UAAU,CAACe,QAAQ,CAAC,eAAe,CAAC;MACxC,CAAC,MAAM;QACHjB,cAAc,EAAE;QAChBkB,KAAK,CAACC,KAAK,CAAC,EAAE,EAAC,4BAA4B,CAAC;MAChD;IACJ,CAAC,MACI;MACDD,KAAK,CAACC,KAAK,CAAC,EAAE,EAAC,iDAAiD,CAAC;MACjEjB,UAAU,CAACe,QAAQ,CAAC,OAAO,CAAC;IAChC;EACJ,CAAC;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAIzB,KAAK,CAAC4B,SAAU;IAAA,WAC3B,KAAC,KAAK;MACF,UAAU,EAAC,cAAc;MACzB,KAAK,EAAC,SAAS;MACf,QAAQ,EAAE,EAAG;MAAA,UAAC;IAAU,EAAQ,EACpC,KAAC,YAAY;MAAC,KAAK,EAAEC,MAAM,CAACC,IAAK;MAAA,UACjC,KAAC,SAAS;QACN,GAAG,EAAEb;MAAI,GACLE,KAAK;QACT,WAAW,EAAE,KAAM;QACnB,SAAS,EAAE,IAAK;QAChB,KAAK,EAAER,KAAM;QACb,YAAY,EAAEC,QAAS;QACvB,SAAS,EAAEG,UAAW;QACtB,SAAS,EAAEf,KAAK,CAAC+B,aAAc;QAC/B,eAAe,EAAC,aAAa;QAC7B,UAAU,EAAE;UAAA,IAAEC,KAAK,SAALA,KAAK;YAAEC,MAAM,SAANA,MAAM;YAAEC,SAAS,SAATA,SAAS;UAAA,OAClC,KAAC,IAAI;YAEL,QAAQ,EAAEd,sBAAsB,CAACY,KAAK,CAAE;YAAA,UAExC,KAAC,IAAI;cAED,KAAK,EAAE,CAAChC,KAAK,CAACmC,IAAI,EAAED,SAAS,IAAIlC,KAAK,CAACoC,SAAS,CAAE;cAAA,UACjDH,MAAM,KAAKC,SAAS,GAAG,KAAC,MAAM,KAAG,GAAG,IAAI;YAAC,GAFrCF,KAAK;UAGP,GAPFA,KAAK,CAQH;QAAA;MAET;IACJ,EACa,EACf,KAAC,SAAS;MAAC,OAAO,EAAE;QAAA,OAAMX,YAAY,EAAE;MAAA,CAAC;MAAA,UAAC;IAAM,EAAY;EAAA,EACzD;AAEf"},"metadata":{},"sourceType":"module"}