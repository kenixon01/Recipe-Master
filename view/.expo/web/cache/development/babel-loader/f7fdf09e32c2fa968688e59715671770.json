{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setQuery } from \"../../../../actions/index\";\nimport styles from \"./style\";\nimport { Section, Title, SearchBox, Tag } from \"../../lib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MainScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textInput = _useState4[0],\n    setTextInput = _useState4[1];\n  var recentSearches = useSelector(function (store) {\n    return store.searches;\n  });\n  var dispatch = useDispatch();\n  var handleQuery = function handleQuery(data) {\n    dispatch(setQuery(data));\n  };\n  var queryResultsNav = function queryResultsNav(search) {\n    handleQuery(search);\n    navigation.navigate(\"Result\");\n    setTextInput('');\n  };\n  var generateRecentSearches = function generateRecentSearches() {\n    if (!recentSearches.length) {\n      return _jsx(Text, {\n        style: styles.SmallerTxt,\n        children: \"Start searching for recipes!\"\n      });\n    }\n    return _jsxs(View, {\n      children: [_jsx(Header, {\n        children: \"Recent Searches\"\n      }), _jsx(Text, {\n        style: styles.SmallerTxt,\n        children: \"Try one of these!\"\n      }), _jsx(View, {\n        style: styles.allRecentSearches,\n        children: recentSearches.slice(0, 10).map(function (element, index) {\n          var randColor = \"rgb(\" + (Math.random() * 56 + 200) + \",\" + (Math.random() * 156 + 100) + \",\" + Math.random() * 100 + \")\";\n          return _jsx(Tag, {\n            onPress: function onPress() {\n              return queryResultsNav(element);\n            },\n            index: index,\n            backgroundColor: randColor,\n            children: element\n          });\n        })\n      })]\n    });\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          source: require(\"../../../../assets/20220901_133028_HDR2.jpg\"),\n          style: styles.image\n        }), _jsx(Title, {\n          fontFamily: \"PTSansNarrow\",\n          color: '#BFA600',\n          fontSize: 40,\n          textAlign: 'center',\n          children: \"Welcome, User\"\n        }), _jsx(Section, {\n          backgroundColor: '#4F5200',\n          children: _jsx(SearchBox, {\n            placeholder: \"Search for a recipe or ingredient\",\n            onSubmitEditing: function onSubmitEditing(newSearch) {\n              queryResultsNav(newSearch.nativeEvent.text);\n            },\n            onChangeText: function onChangeText(text) {\n              return setTextInput(text);\n            },\n            defaultValue: search,\n            clearButtonMode: \"always\",\n            value: textInput\n          })\n        }), _jsx(Section, {\n          backgroundColor: 'white',\n          children: generateRecentSearches()\n        }), _jsx(Section, {\n          backgroundColor: '#4F5200',\n          children: _jsx(Header, {\n            children: \"Favorite Recipes\"\n          })\n        }), _jsx(Section, {\n          backgroundColor: 'white',\n          children: _jsx(Header, {\n            children: \"Explore\"\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setQuery","styles","Section","Title","SearchBox","Tag","MainScreen","navigation","search","setSearch","textInput","setTextInput","recentSearches","store","searches","dispatch","handleQuery","data","queryResultsNav","navigate","generateRecentSearches","length","SmallerTxt","allRecentSearches","slice","map","element","index","randColor","Math","random","container","require","image","newSearch","nativeEvent","text"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/components/auth/Screens/main/MainScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Text, View, Image, SafeAreaView, ScrollView } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setQuery } from '../../../../actions/index';\r\nimport styles from './style'\r\nimport {Section, Title, SearchBox, Tag} from '../../lib';\r\n\r\nexport default function MainScreen ({navigation}) {\r\n  \r\n  const [search, setSearch] = useState('');\r\n  const [textInput, setTextInput] = useState('');\r\n  \r\n  const recentSearches = useSelector((store) => store.searches);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleQuery = (data) => {\r\n    dispatch(setQuery(data))\r\n  }\r\n\r\n  const queryResultsNav = (search) => {\r\n    handleQuery(search)\r\n    navigation.navigate(\"Result\")\r\n    setTextInput('')\r\n  }\r\n  const generateRecentSearches = () => {\r\n    if(!recentSearches.length) { \r\n      return <Text style = {styles.SmallerTxt}>Start searching for recipes!</Text>\r\n    }\r\n    return(\r\n      <View>\r\n        <Header>Recent Searches</Header>\r\n        <Text style = {styles.SmallerTxt}>Try one of these!</Text>\r\n          <View style = {styles.allRecentSearches}>\r\n            {\r\n              recentSearches.slice(0, 10).map((element, index) => {\r\n                const randColor = `rgb(${Math.random() * 56 + 200},${Math.random() * 156 + 100},${Math.random() * 100})`\r\n                return (\r\n                  <Tag\r\n                    onPress={() => queryResultsNav(element)} \r\n                    index={index} \r\n                    backgroundColor={randColor}\r\n                  >{element}</Tag>\r\n                )\r\n            })}\r\n          </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <SafeAreaView>\r\n      <ScrollView>\r\n        <View style = {styles.container} >\r\n          <Image source={require('../../../../assets/20220901_133028_HDR2.jpg')} style={styles.image}/>\r\n          <Title \r\n            fontFamily={\"PTSansNarrow\" }\r\n            color={'#BFA600'}\r\n            fontSize={40}\r\n            textAlign={'center'}\r\n          >Welcome, User</Title>\r\n          <Section backgroundColor={'#4F5200'}>\r\n            <SearchBox\r\n              placeholder = \"Search for a recipe or ingredient\"\r\n              onSubmitEditing={newSearch => {\r\n                queryResultsNav(newSearch.nativeEvent.text)\r\n              }}\r\n              onChangeText={text => setTextInput(text)}\r\n              defaultValue={search}\r\n              clearButtonMode='always'\r\n              value={textInput}/>\r\n          </Section>\r\n          <Section backgroundColor={'white'}>\r\n            {generateRecentSearches()}\r\n          </Section>\r\n          <Section backgroundColor={'#4F5200'}>\r\n            <Header>Favorite Recipes</Header>\r\n          </Section>\r\n          <Section backgroundColor={'white'}>\r\n            <Header>Explore</Header>\r\n          </Section>\r\n      </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}