{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport chroma from 'chroma-js';\nimport { useTheme } from \"./base/ThemeContext\";\nvar Divider = function Divider(_ref) {\n  var color = _ref.color,\n    inset = _ref.inset,\n    leadingInset = _ref.leadingInset,\n    trailingInset = _ref.trailingInset,\n    style = _ref.style;\n  var _useTheme = useTheme(),\n    palette = _useTheme.palette;\n  return React.createElement(View, {\n    style: [{\n      height: 1,\n      backgroundColor: color !== null && color !== void 0 ? color : chroma(palette.surface.on).alpha(0.08).hex(),\n      marginStart: inset !== null && inset !== void 0 ? inset : leadingInset,\n      marginEnd: inset !== null && inset !== void 0 ? inset : trailingInset\n    }, style]\n  });\n};\nexport default Divider;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT;AAcA,IAAMC,OAA+B,GAAG,SAAlCA,OAA+B,CAAGC,MAA0D;EAAA,IAAvDC,KAAF,GAAyDD,KAAvDC,KAAF;IAASC,KAAT,GAAyDF,KAAhDE,KAAT;IAAgBC,YAAhB,GAAyDH,KAAzCG,YAAhB;IAA8BC,aAA9B,GAAyDJ,KAA3BI,aAA9B;IAA6CC,QAAYL,KAAZK;EACpF,gBAAoBP,QAAQ,EAA5B;IAAQQ;EACR,OACEV,oBAACW,IAAD;IACEF,KAAK,EAAE,CACL;MACEG,MAAM,EAAE,CADV;MAEEC,eAAe,EAAER,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWJ,MAAM,CAACS,OAAO,CAACI,OAAR,CAAgBC,EAAjB,CAAN,CAA2BC,KAA3B,CAAiC,IAAjC,EAAuCC,GAAvC,EAF5B;MAGEC,WAAW,EAAEZ,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWC,YAHxB;MAIEY,SAAS,EAAEb,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWE;IAJtB,CADK,EAOLC,KAPK;EADT,EADF;AAaD,CAfD;AAiBA,eAAeN,OAAf","names":["React","chroma","useTheme","Divider","_ref","color","inset","leadingInset","trailingInset","style","palette","View","height","backgroundColor","surface","on","alpha","hex","marginStart","marginEnd"],"sources":["Divider.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport chroma from 'chroma-js';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface DividerProps {\n  color?: string | undefined;\n\n  inset?: number | undefined;\n\n  leadingInset?: number | undefined;\n\n  trailingInset?: number | undefined;\n\n  style?: StyleProp<ViewStyle> | undefined;\n}\n\nconst Divider: React.FC<DividerProps> = ({ color, inset, leadingInset, trailingInset, style }) => {\n  const { palette } = useTheme();\n  return (\n    <View\n      style={[\n        {\n          height: 1,\n          backgroundColor: color ?? chroma(palette.surface.on).alpha(0.08).hex(),\n          marginStart: inset ?? leadingInset,\n          marginEnd: inset ?? trailingInset,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default Divider;\n"]},"metadata":{},"sourceType":"module"}