{"ast":null,"code":"import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar URI = 'http://192.168.1.213:4000/';\nvar httpLink = createHttpLink({\n  uri: URI\n});\nvar authLink = setContext(function () {\n  var token = AsyncStorage.getItem('token');\n  return {\n    token: token\n  };\n});\nvar client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default client;","map":{"version":3,"names":["ApolloClient","createHttpLink","InMemoryCache","setContext","AsyncStorage","URI","httpLink","uri","authLink","token","getItem","client","link","concat","cache"],"sources":["C:/Users/Andy/Desktop/recipe/Recipe-Master/view/Apollo.js"],"sourcesContent":["import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\n\r\nconst URI = 'http://192.168.1.213:4000/';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: URI\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = AsyncStorage.getItem('token');\r\n  // return the headers to the context so httpLink can read them\r\n  return { token }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default client;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,cAAc,EAAEC,aAAa,QAAQ,gBAAgB;AAC5E,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,GAAG,GAAG,4BAA4B;AAGxC,IAAMC,QAAQ,GAAGL,cAAc,CAAC;EAC9BM,GAAG,EAAEF;AACP,CAAC,CAAC;AAEF,IAAMG,QAAQ,GAAGL,UAAU,CAAC,YAAM;EAEhC,IAAMM,KAAK,GAAGL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAE3C,OAAO;IAAED,KAAK,EAALA;EAAM,CAAC;AAClB,CAAC,CAAC;AAEF,IAAME,MAAM,GAAG,IAAIX,YAAY,CAAC;EAC9BY,IAAI,EAAEJ,QAAQ,CAACK,MAAM,CAACP,QAAQ,CAAC;EAC/BQ,KAAK,EAAE,IAAIZ,aAAa;AAC1B,CAAC,CAAC;AAEF,eAAeS,MAAM"},"metadata":{},"sourceType":"module"}