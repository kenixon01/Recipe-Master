{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setData, setAPICallLoading } from \"../../../../actions/index\";\nimport { useFonts } from 'expo-font';\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MainScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textInput = _useState4[0],\n    setTextInput = _useState4[1];\n  var _useFonts = useFonts({\n      CairoPlay: require(\"../../../../assets/fonts/CairoPlay-ExtraBold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  var apiLoading = useSelector(function (store) {\n    return store.isLoading;\n  });\n  var dispatch = useDispatch();\n  var handleDataChange = function handleDataChange(data) {\n    dispatch(setData(data));\n  };\n  var handleAPILoadingStateChange = function handleAPILoadingStateChange(data) {\n    dispatch(setAPICallLoading(data));\n  };\n  var getRecipes = function () {\n    var _ref2 = _asyncToGenerator(function* (search) {\n      handleAPILoadingStateChange(true);\n      setSearch(search);\n      var URL = \"https://api.edamam.com/search?q=\" + search + \"&app_id=\" + \"641facf1\" + \"&app_key=\" + \"3bd1c423730ce9650260fd3d5cdabe98\";\n      fetch(URL).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        handleDataChange(responseData);\n      }).catch(function (error) {\n        console.error(error);\n      });\n      handleAPILoadingStateChange(false);\n    });\n    return function getRecipes(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (!loaded || apiLoading) {\n    return null;\n  }\n  return _jsx(SafeAreaView, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          source: require(\"../../../../assets/20220901_133028_HDR2.jpg\"),\n          style: styles.image\n        }), _jsx(Text, {\n          style: _objectSpread(_objectSpread({}, styles.title), {}, {\n            fontFamily: 'CairoPlay'\n          }),\n          children: \"Welcome, User\"\n        }), _jsx(View, {\n          style: styles.greenBox,\n          children: _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              style: styles.inputText,\n              placeholder: \"Search for a recipe or ingredient\",\n              placeholderTextColor: \"#003f5c\",\n              onSubmitEditing: function onSubmitEditing(newSearch) {\n                getRecipes(newSearch.nativeEvent.text);\n                navigation.navigate(\"Result\");\n                setTextInput('');\n              },\n              onChangeText: function onChangeText(text) {\n                return setTextInput(text);\n              },\n              defaultValue: search,\n              clearButtonMode: \"always\",\n              value: textInput\n            })\n          })\n        }), _jsxs(View, {\n          style: styles.whiteBox,\n          children: [_jsx(Text, {\n            style: styles.header,\n            children: \"Popular Searches\"\n          }), _jsx(Text, {\n            style: styles.SmallerTxt,\n            children: \"Try one of these!\"\n          })]\n        }), _jsx(View, {\n          style: styles.greenBox,\n          children: _jsx(Text, {\n            style: styles.header,\n            children: \"Recommended Recipes\"\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setData","setAPICallLoading","useFonts","styles","MainScreen","navigation","search","setSearch","textInput","setTextInput","CairoPlay","require","loaded","apiLoading","store","isLoading","dispatch","handleDataChange","data","handleAPILoadingStateChange","getRecipes","URL","fetch","then","response","json","responseData","catch","error","console","container","image","title","fontFamily","greenBox","inputView","inputText","newSearch","nativeEvent","text","navigate","whiteBox","header","SmallerTxt"],"sources":["C:/Users/minix/OneDrive/Documents/GitHub/Recipe-Master/components/auth/Screens/main/MainScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Text, View, TextInput, Image, SafeAreaView, ScrollView } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setData, setAPICallLoading } from '../../../../actions/index';\r\nimport { API_ID, API_KEY } from '@env'\r\nimport { useFonts } from 'expo-font';\r\nimport styles from './style'\r\n\r\nexport default function MainScreen ({navigation}) {\r\n  \r\n  const [search, setSearch] = useState('');\r\n  const [textInput, setTextInput] = useState('');\r\n\r\n  const [loaded] = useFonts({\r\n    CairoPlay: require('../../../../assets/fonts/CairoPlay-ExtraBold.ttf'),\r\n  });\r\n\r\n  \r\n  const apiLoading = useSelector((store) => store.isLoading);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDataChange = (data) => {\r\n    dispatch(setData(data))\r\n  }\r\n\r\n  const handleAPILoadingStateChange = (data) => {\r\n    dispatch(setAPICallLoading(data))\r\n  }\r\n \r\n  const getRecipes = async (search) => {\r\n    handleAPILoadingStateChange(true)\r\n    setSearch(search)\r\n    const URL = `https://api.edamam.com/search?q=${search}&app_id=${API_ID}&app_key=${API_KEY}`\r\n    fetch(URL).then(response => {\r\n      return response.json();\r\n    }).then(responseData => {\r\n      handleDataChange(responseData);\r\n    }).catch(error => {\r\n      console.error(error);\r\n    })\r\n    handleAPILoadingStateChange(false)\r\n  }\r\n  \r\n  if (!loaded || apiLoading) {\r\n\r\n    return null;\r\n  }\r\n\r\n  return(\r\n    <SafeAreaView>\r\n      <ScrollView>\r\n        <View style = {styles.container} >\r\n        <Image source={require('../../../../assets/20220901_133028_HDR2.jpg')} style={styles.image}/>\r\n        <Text style = {{...styles.title, fontFamily: 'CairoPlay' }}>Welcome, User</Text>\r\n        <View style = {styles.greenBox}>\r\n          <View style = {styles.inputView}>\r\n            <TextInput \r\n                style = {styles.inputText}\r\n                placeholder = \"Search for a recipe or ingredient\"\r\n                placeholderTextColor=\"#003f5c\"\r\n                onSubmitEditing={newSearch => {\r\n                  getRecipes(newSearch.nativeEvent.text);\r\n                  navigation.navigate(\"Result\");\r\n                  setTextInput('');\r\n                }}\r\n                onChangeText={text => setTextInput(text)}\r\n                defaultValue={search}\r\n                clearButtonMode='always'\r\n                value={textInput}\r\n            />\r\n          </View>\r\n        </View>\r\n          <View style = {styles.whiteBox}>\r\n            <Text style = {styles.header}>Popular Searches</Text>\r\n            <Text style = {styles.SmallerTxt}>Try one of these!</Text>\r\n          </View>\r\n\r\n          <View style ={styles.greenBox}>\r\n            <Text style = {styles.header}>Recommended Recipes</Text>\r\n          </View>\r\n      </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}