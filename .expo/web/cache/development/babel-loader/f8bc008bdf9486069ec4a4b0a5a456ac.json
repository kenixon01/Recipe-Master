{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport style from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Register = function (_Component) {\n  _inherits(Register, _Component);\n  var _super = _createSuper(Register);\n  function Register(props) {\n    var _this;\n    _classCallCheck(this, Register);\n    _this = _super.call(this, props);\n    _this.checkInput = function () {\n      var _this$state = _this.state,\n        firstName = _this$state.firstName,\n        password = _this$state.password,\n        lastname = _this$state.lastname,\n        email = _this$state.email,\n        userName = _this$state.userName;\n      if (!firstName.trim() || !lastname.trim() || !email.trim() || !userName.trim() || !password.trim()) {\n        Alert.alert('Field Error', 'No fields can remain blank');\n        return;\n      } else if (password.length <= 8) {\n        Alert.alert('Password Error', 'Password must be at least 8 characters');\n      }\n    };\n    _this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastname: '',\n      userName: ''\n    };\n    return _this;\n  }\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var navigation = this.props.navigation;\n      return _jsx(View, {\n        style: style.container,\n        children: _jsxs(ImageBackground, {\n          style: style.image,\n          children: [_jsx(Text, {\n            style: style.title,\n            children: \" Recipe Generator\"\n          }), _jsx(View, {\n            style: style.inputView,\n            children: _jsx(TextInput, {\n              style: style.inputText,\n              placeholder: \"First Name\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: function onChangeText(firstName) {\n                return _this2.setState({\n                  firstName: firstName\n                });\n              }\n            })\n          }), _jsx(View, {\n            style: style.inputView,\n            children: _jsx(TextInput, {\n              style: style.inputText,\n              placeholder: \"Last Name\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: function onChangeText(lastname) {\n                return _this2.setState({\n                  lastname: lastname\n                });\n              }\n            })\n          }), _jsx(View, {\n            style: style.inputView,\n            children: _jsx(TextInput, {\n              style: style.inputText,\n              placeholder: \"Email\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: function onChangeText(email) {\n                return _this2.setState({\n                  email: email\n                });\n              }\n            })\n          }), _jsx(View, {\n            style: style.inputView,\n            children: _jsx(TextInput, {\n              style: style.inputText,\n              placeholder: \"User Name\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: function onChangeText(userName) {\n                return _this2.setState({\n                  userName: userName\n                });\n              }\n            })\n          }), _jsx(View, {\n            style: style.inputView,\n            children: _jsx(TextInput, {\n              style: style.inputText,\n              placeholder: \"Password\",\n              placeholderTextColor: \"#003f5c\",\n              onChangeText: function onChangeText(password) {\n                return _this2.setState({\n                  password: password\n                });\n              }\n            })\n          }), _jsx(View, {\n            children: _jsx(Text, {\n              style: style.text,\n              children: \"Must be at least 8 characters and include at least 1 special character\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: style.SignupBtn,\n            onPress: this.checkInput,\n            children: _jsx(Text, {\n              children: \"Sign Up\"\n            })\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [_jsx(Text, {\n              children: \"Already have an account ?\"\n            }), _jsx(Text, {\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate(\"Login\");\n              },\n              style: style.LoginText,\n              children: \" Login \"\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n  return Register;\n}(Component);\nexport default Register;","map":{"version":3,"names":["React","Component","style","Register","props","checkInput","state","firstName","password","lastname","email","userName","trim","Alert","alert","length","navigation","container","image","title","inputView","inputText","setState","text","SignupBtn","flexDirection","navigate","LoginText"],"sources":["C:/Users/minix/OneDrive/Documents/GitHub/Recipe-Master/components/auth/Screens/register/Register.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text, TextInput, TouchableOpacity, ImageBackground, Image, Alert } from 'react-native'\r\nimport style from './style'\r\n\r\n  \r\nexport class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastname: '',\r\n            userName: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n  \r\n    // SetStates() {\r\n    //   const [firstName, setFirstName] = useState('')\r\n    // }\r\n    \r\n    checkInput = () =>{\r\n      const {firstName, password, lastname, email, userName} = this.state;\r\n      if (!firstName.trim() || !lastname.trim() || !email.trim() || !userName.trim() || !password.trim()){\r\n        Alert.alert('Field Error','No fields can remain blank')\r\n        return;\r\n      }\r\n      else if (password.length <= 8){\r\n        Alert.alert('Password Error','Password must be at least 8 characters')\r\n      }\r\n\r\n    }\r\n  render() {\r\n    const {navigation} = this.props;\r\n  \r\n    return (\r\n      <View style = {style.container}>\r\n         \r\n        <ImageBackground \r\n         style = {style.image}>\r\n    \r\n      <Text style={style.title}> Recipe Generator</Text>\r\n      <View style = {style.inputView}>\r\n         <TextInput\r\n            style = {style.inputText}\r\n            placeholder = \"First Name\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText = {(firstName) => this.setState({firstName})}\r\n            />\r\n          </View>\r\n\r\n          <View style = {style.inputView}>\r\n        <TextInput \r\n            style = {style.inputText}\r\n            placeholder = \"Last Name\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText = {(lastname) => this.setState({lastname})}\r\n            />\r\n            </View> \r\n\r\n      <View style = {style.inputView}>\r\n        <TextInput \r\n            style = {style.inputText}\r\n            placeholder = \"Email\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText = {(email) => this.setState({email})}\r\n            />\r\n            </View>\r\n            <View style = {style.inputView}>\r\n        <TextInput \r\n            style = {style.inputText}\r\n            placeholder = \"User Name\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText = {(userName) => this.setState({userName})}\r\n            />\r\n            </View>  \r\n        <View style = {style.inputView}>\r\n         <TextInput\r\n            style = {style.inputText}\r\n            placeholder = \"Password\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText = {(password) => this.setState({password})}\r\n            />\r\n          </View> \r\n          <View>\r\n            <Text style = {style.text}>Must be at least 8 characters and include at least 1 special\r\n              character\r\n            </Text>\r\n          </View>\r\n        <TouchableOpacity style={style.SignupBtn} onPress = {this.checkInput}>\r\n            <Text>Sign Up</Text> \r\n        </TouchableOpacity>\r\n        <View style = {{flexDirection: 'row'}}>\r\n          <Text>Already have an account ?</Text>\r\n          <Text onPress={() => this.props.navigation.navigate(\"Login\")} style = {style.LoginText}> Login </Text>\r\n          \r\n        </View>\r\n        </ImageBackground>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}