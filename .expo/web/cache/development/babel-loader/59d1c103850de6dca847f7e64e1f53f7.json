{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useSelector } from 'react-redux';\nimport App from \"../../../App\";\nimport { useDispatch } from 'react-redux';\nimport { setDeleteAcct } from \"../../../actions/index\";\nimport HomeScreen from \"../Screens/main/MainScreen\";\nimport SettingsScreen from \"../Screens/settings/Setting\";\nimport ListScreen from \"../Screens/listEditor/ListEditor\";\nimport Results from \"../Screens/results/Results\";\nimport { useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction HomeStackScreen() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"HomePage\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Result\",\n      component: Results,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\nfunction SettingStackScreen() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"Setting\",\n      component: SettingsScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n}\nfunction ListEditorStackScreen() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"ListEditor\",\n      component: ListScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Result\",\n      component: Results,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\nvar Tab = createBottomTabNavigator();\nexport default function NavigationBar() {\n  var data = useSelector(function (store) {\n    return store.deleted;\n  });\n  var dispatch = useDispatch();\n  var handleDeleteAcct = function handleDeleteAcct(data) {\n    dispatch(setDeleteAcct(data));\n  };\n  useEffect(function () {\n    handleDeleteAcct(false);\n  }, []);\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: 'Home',\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n            if (rn === 'Home') {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (rn === 'Settings') {\n              iconName = focused ? 'settings' : 'settings-outline';\n            } else if (rn === 'List Editor') {\n              iconName = focused ? 'list' : 'list-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"List Editor\",\n        component: ListEditorStackScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: SettingStackScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","Ionicons","useSelector","App","useDispatch","setDeleteAcct","HomeScreen","SettingsScreen","ListScreen","Results","useEffect","Stack","HomeStackScreen","headerShown","SettingStackScreen","ListEditorStackScreen","Tab","NavigationBar","data","store","deleted","dispatch","handleDeleteAcct","route","tabBarIcon","focused","color","size","iconName","rn","name"],"sources":["C:/Users/minix/OneDrive/Documents/GitHub/Recipe-Master/components/auth/nav/NavigationBar.js"],"sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport { useSelector } from 'react-redux';\r\nimport App from '../../../App';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setDeleteAcct } from '../../../actions/index';\r\n\r\n\r\n//Screens\r\nimport HomeScreen from '../Screens/main/MainScreen';\r\nimport SettingsScreen from '../Screens/settings/Setting';\r\nimport ListScreen from '../Screens/listEditor/ListEditor';\r\nimport Results from '../Screens/results/Results';\r\nimport { useEffect } from 'react';\r\n// import Login from '../Screens/login/Login';\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nfunction HomeStackScreen (){\r\n    return(\r\n        <Stack.Navigator>\r\n            <Stack.Screen name = 'HomePage' component={HomeScreen}  options= {{headerShown: false}}/>\r\n            <Stack.Screen name = 'Result' component={Results}  options= {{headerShown: false}}/>\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nfunction SettingStackScreen (){\r\n    return(\r\n        <Stack.Navigator>\r\n            <Stack.Screen name = 'Setting' component={SettingsScreen}  options= {{headerShown: false}}/>\r\n            {/* <Stack.Screen name = 'Login' component={App} options= {{headerShown: false}}/> */}\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nfunction ListEditorStackScreen (){\r\n    return(\r\n        <Stack.Navigator>\r\n            <Stack.Screen name = 'ListEditor' component={ListScreen}  options= {{headerShown: false}}/>\r\n            <Stack.Screen name = 'Result' component={Results}  options= {{headerShown: false}}/>\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\nexport default function NavigationBar() {\r\n    const data = useSelector((store) => store.deleted);\r\n    const dispatch = useDispatch();\r\n  \r\n    const handleDeleteAcct = (data) => {\r\n      dispatch(setDeleteAcct(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleDeleteAcct(false)\r\n    }, [])\r\n\r\n    // if(data)  {\r\n    //     return <App/>\r\n    // }\r\n\r\n    return(\r\n        <NavigationContainer independent={true}>\r\n            <Tab.Navigator initialRouteName={'Home'} screenOptions = {({route}) => ({\r\n                tabBarIcon: ({focused, color, size}) => {\r\n                    let iconName;\r\n                    let rn = route.name;\r\n\r\n                    if (rn === 'Home'){\r\n                        iconName = focused ? 'home' : 'home-outline'\r\n                    }\r\n                    else if (rn === 'Settings'){\r\n                        iconName = focused ? 'settings' : 'settings-outline'\r\n                    }\r\n                    else if (rn === 'List Editor'){\r\n                        iconName = focused ? 'list' : 'list-outline'\r\n                    }\r\n\r\n                    return (<Ionicons name = {iconName} size = {size} color={color}/>);\r\n                },\r\n            })}\r\n            // tabBarOptions = {{\r\n            //     activeTintColor: 'lightseagreen',\r\n            //     inactiveTintColor: 'grey',\r\n            //     lableStyle: {fontSize: 16},\r\n                \r\n            // }}\r\n            >\r\n                <Tab.Screen name = 'List Editor' component={ListEditorStackScreen} options={{headerShown: false}}/>\r\n                <Tab.Screen name = 'Home' component={HomeStackScreen} options={{headerShown: false}}/>\r\n                <Stack.Screen name = 'Settings' component={SettingStackScreen} options={{headerShown: false}}/>\r\n            </Tab.Navigator>\r\n        </NavigationContainer>\r\n    )    \r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,QAAQ;AACf,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,GAAG;AACV,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa;AAItB,OAAOC,UAAU;AACjB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AACjB,OAAOC,OAAO;AACd,SAASC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAGlC,IAAMC,KAAK,GAAGZ,oBAAoB,EAAE;AAEpC,SAASa,eAAe,GAAG;EACvB,OACI,MAAC,KAAK,CAAC,SAAS;IAAA,WACZ,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,UAAU;MAAC,SAAS,EAAEN,UAAW;MAAE,OAAO,EAAG;QAACO,WAAW,EAAE;MAAK;IAAE,EAAE,EACzF,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,QAAQ;MAAC,SAAS,EAAEJ,OAAQ;MAAE,OAAO,EAAG;QAACI,WAAW,EAAE;MAAK;IAAE,EAAE;EAAA,EACtE;AAE1B;AAEA,SAASC,kBAAkB,GAAG;EAC1B,OACI,KAAC,KAAK,CAAC,SAAS;IAAA,UACZ,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,SAAS;MAAC,SAAS,EAAEP,cAAe;MAAE,OAAO,EAAG;QAACM,WAAW,EAAE;MAAK;IAAE;EAAE,EAE9E;AAE1B;AAEA,SAASE,qBAAqB,GAAG;EAC7B,OACI,MAAC,KAAK,CAAC,SAAS;IAAA,WACZ,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,YAAY;MAAC,SAAS,EAAEP,UAAW;MAAE,OAAO,EAAG;QAACK,WAAW,EAAE;MAAK;IAAE,EAAE,EAC3F,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAG,QAAQ;MAAC,SAAS,EAAEJ,OAAQ;MAAE,OAAO,EAAG;QAACI,WAAW,EAAE;MAAK;IAAE,EAAE;EAAA,EACtE;AAE1B;AAEA,IAAMG,GAAG,GAAGhB,wBAAwB,EAAE;AACtC,eAAe,SAASiB,aAAa,GAAG;EACpC,IAAMC,IAAI,GAAGhB,WAAW,CAAC,UAACiB,KAAK;IAAA,OAAKA,KAAK,CAACC,OAAO;EAAA,EAAC;EAClD,IAAMC,QAAQ,GAAGjB,WAAW,EAAE;EAE9B,IAAMkB,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIJ,IAAI,EAAK;IACjCG,QAAQ,CAAChB,aAAa,CAACa,IAAI,CAAC,CAAC;EAC/B,CAAC;EAEDR,SAAS,CAAC,YAAM;IACZY,gBAAgB,CAAC,KAAK,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAMN,OACI,KAAC,mBAAmB;IAAC,WAAW,EAAE,IAAK;IAAA,UACnC,MAAC,GAAG,CAAC,SAAS;MAAC,gBAAgB,EAAE,MAAO;MAAC,aAAa,EAAI;QAAA,IAAEC,KAAK,QAALA,KAAK;QAAA,OAAO;UACpEC,UAAU,EAAE,2BAA4B;YAAA,IAA1BC,OAAO,SAAPA,OAAO;cAAEC,KAAK,SAALA,KAAK;cAAEC,IAAI,SAAJA,IAAI;YAC9B,IAAIC,QAAQ;YACZ,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAI;YAEnB,IAAID,EAAE,KAAK,MAAM,EAAC;cACdD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;YAChD,CAAC,MACI,IAAII,EAAE,KAAK,UAAU,EAAC;cACvBD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;YACxD,CAAC,MACI,IAAII,EAAE,KAAK,aAAa,EAAC;cAC1BD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;YAChD;YAEA,OAAQ,KAAC,QAAQ;cAAC,IAAI,EAAIG,QAAS;cAAC,IAAI,EAAID,IAAK;cAAC,KAAK,EAAED;YAAM,EAAE;UACrE;QACJ,CAAC;MAAA,CAAE;MAAA,WAQC,KAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAG,aAAa;QAAC,SAAS,EAAEX,qBAAsB;QAAC,OAAO,EAAE;UAACF,WAAW,EAAE;QAAK;MAAE,EAAE,EACnG,KAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAG,MAAM;QAAC,SAAS,EAAED,eAAgB;QAAC,OAAO,EAAE;UAACC,WAAW,EAAE;QAAK;MAAE,EAAE,EACtF,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAG,UAAU;QAAC,SAAS,EAAEC,kBAAmB;QAAC,OAAO,EAAE;UAACD,WAAW,EAAE;QAAK;MAAE,EAAE;IAAA;EACnF,EACE;AAE9B"},"metadata":{},"sourceType":"module"}