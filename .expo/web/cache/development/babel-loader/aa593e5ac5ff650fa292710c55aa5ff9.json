{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"./style\";\nimport { useFonts } from 'expo-font';\nimport { useDispatch } from 'react-redux';\nimport { setData } from \"../../../../actions/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useFonts = useFonts({\n      CairoPlay: require(\"../../../../assets/fonts/CairoPlay-ExtraBold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    shouldshow = _useState2[0],\n    setshouldShow = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isShowing = _useState4[0],\n    setIsShowing = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    deleteAcct = _useState6[0],\n    setDeleteAcct = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isOn = _useState8[0],\n    setIsOn = _useState8[1];\n  var onToggleSwitch = function onToggleSwitch() {\n    return setIsOn(!isOn);\n  };\n  var dispatch = useDispatch();\n  var handleDeleteAcct = function handleDeleteAcct(data) {\n    dispatch(setDeleteAcct(data));\n  };\n  if (!loaded) {\n    return null;\n  }\n  return _jsx(SafeAreaView, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: _objectSpread(_objectSpread({}, styles.title), {}, {\n            fontFamily: \"CairoPlay\"\n          }),\n          children: \"Settings\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setshouldShow(!shouldshow);\n          },\n          children: _jsx(Text, {\n            style: styles.headerText,\n            children: \"Personal Information\"\n          })\n        }), shouldshow ? _jsxs(View, {\n          children: [_jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              style: styles.inputText,\n              placeholder: \"First Name\",\n              placeholderTextColor: \"#003f5c\"\n            })\n          }), _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              style: styles.inputText,\n              placeholder: \"Last Name\",\n              placeholderTextColor: \"#003f5c\"\n            })\n          }), _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              style: styles.inputText,\n              placeholder: \"Email Address\",\n              placeholderTextColor: \"#003f5c\"\n            })\n          }), _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              style: styles.inputText,\n              placeholder: \"Username\",\n              placeholderTextColor: \"#003f5c\"\n            })\n          }), _jsx(View, {\n            style: styles.inputView,\n            children: _jsx(TextInput, {\n              style: styles.inputText,\n              placeholder: \"Password\",\n              placeholderTextColor: \"#003f5c\"\n            })\n          }), _jsx(View, {\n            children: _jsx(TouchableOpacity, {\n              style: styles.SubmitBtn,\n              children: _jsx(Text, {\n                style: styles.SubmitText,\n                children: \"Save Changes\"\n              })\n            })\n          })]\n        }) : null, _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setIsShowing(!isShowing);\n          },\n          children: _jsx(Text, {\n            style: styles.headerText,\n            children: \"Accessibility\"\n          })\n        }), isShowing ? _jsx(View, {\n          children: _jsxs(View, {\n            children: [_jsx(Text, {\n              children: \"Dark Mode\"\n            }), _jsx(Switch, {\n              value: isOn,\n              onValueChange: onToggleSwitch,\n              trackColor: {\n                false: 'black',\n                true: 'white'\n              },\n              thumbColor: isOn ? \"black\" : \"white\"\n            })]\n          })\n        }) : null, _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return Alert.alert('Delete Account ?!?', 'Are you sure you want to delete your account?', [{\n                text: 'Cancel',\n                onPress: function onPress() {\n                  return console.log('Cancel Pressed!');\n                }\n              }, {\n                text: 'Confirm',\n                onPress: handleDeleteAcct(true)\n              }], {\n                cancelable: false\n              });\n            },\n            children: _jsx(Text, {\n              style: styles.deleteText,\n              children: \"Delete Account ?\"\n            })\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","styles","useFonts","useDispatch","setData","SettingsScreen","navigation","CairoPlay","require","loaded","shouldshow","setshouldShow","isShowing","setIsShowing","deleteAcct","setDeleteAcct","isOn","setIsOn","onToggleSwitch","dispatch","handleDeleteAcct","data","container","title","fontFamily","headerText","inputView","inputText","SubmitBtn","SubmitText","false","true","Alert","alert","text","onPress","console","log","cancelable","deleteText"],"sources":["C:/Users/minix/OneDrive/Documents/GitHub/Recipe-Master/components/auth/Screens/settings/Setting.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Switch, Alert, ScrollView, SafeAreaView } from 'react-native';\r\nimport styles from './style';\r\nimport { useFonts } from 'expo-font';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setData } from '../../../../actions/index';\r\n\r\nexport default function SettingsScreen ({navigation}){\r\n    const [loaded] = useFonts({\r\n        CairoPlay: require('../../../../assets/fonts/CairoPlay-ExtraBold.ttf'),\r\n    });\r\n\r\n    const [shouldshow, setshouldShow] = useState(false);\r\n    //const [darkMode, setDarkMode] = useState(false);\r\n    const [isShowing, setIsShowing] = useState(false);\r\n    const [deleteAcct, setDeleteAcct] = useState(false);\r\n\r\n    const [isOn , setIsOn] = useState(false);\r\n    const onToggleSwitch = () => setIsOn(!isOn);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDeleteAcct = (data) => {\r\n      dispatch(setDeleteAcct(data))\r\n    }\r\n    // const handleLogout = () => {\r\n    //     navigation.navigate(\"Login\");\r\n    //     // Alert.alert('Account has been deleted',\r\n    //     // [ {text: 'Okay'} ],\r\n    //     //   { cancelable: false })\r\n    // }\r\n    if(!loaded) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView>\r\n                <View style = {styles.container}>\r\n                    <Text style = {{...styles.title, fontFamily: \"CairoPlay\"}}>Settings</Text>\r\n                    <TouchableOpacity onPress={() => setshouldShow(!shouldshow)}> \r\n                        <Text style = {styles.headerText}>Personal Information</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    {shouldshow ? (\r\n                        <View >\r\n                            <View style = {styles.inputView}>\r\n                                <TextInput \r\n                                    style = {styles.inputText}\r\n                                    placeholder = \"First Name\"\r\n                                    placeholderTextColor=\"#003f5c\"\r\n                                    />\r\n                            </View>\r\n                            <View style = {styles.inputView}>\r\n                                <TextInput \r\n                                    style = {styles.inputText}\r\n                                    placeholder = \"Last Name\"\r\n                                    placeholderTextColor=\"#003f5c\"\r\n                                    />\r\n                            </View>\r\n                            <View style = {styles.inputView}>\r\n                            <TextInput \r\n                                style = {styles.inputText}\r\n                                placeholder = \"Email Address\"\r\n                                placeholderTextColor=\"#003f5c\"\r\n                                />\r\n                            </View>\r\n                            <View style = {styles.inputView}>\r\n                                <TextInput \r\n                                    style = {styles.inputText}\r\n                                    placeholder = \"Username\"\r\n                                    placeholderTextColor=\"#003f5c\"\r\n                                    />\r\n                            </View>\r\n                            <View style = {styles.inputView}>\r\n                                <TextInput \r\n                                    style = {styles.inputText}\r\n                                    placeholder = \"Password\"\r\n                                    placeholderTextColor=\"#003f5c\"\r\n                                    />\r\n                            </View>\r\n                            <View>\r\n                                <TouchableOpacity style={styles.SubmitBtn}>\r\n                                    <Text style={styles.SubmitText}>Save Changes</Text> \r\n                                </TouchableOpacity> \r\n                            </View>\r\n\r\n                        </View>\r\n                    ) : null } \r\n                    <TouchableOpacity onPress={() => setIsShowing(!isShowing)}> \r\n                        <Text style = {styles.headerText}>Accessibility</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    {isShowing ? (\r\n                        <View >\r\n                            <View>\r\n                                <Text>Dark Mode</Text>\r\n                                <Switch\r\n                                    value = {isOn}\r\n                                    onValueChange = {onToggleSwitch}\r\n                                    trackColor ={{false:'black', true:'white'}}\r\n                                    thumbColor = {isOn ? \"black\": \"white\"}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    ) :null } \r\n                        <View>\r\n                            <TouchableOpacity\r\n                                onPress={() => Alert.alert(\r\n                                    'Delete Account ?!?',\r\n                                    'Are you sure you want to delete your account?',\r\n                                    [\r\n                                        {text: 'Cancel', onPress: () => console.log('Cancel Pressed!')},\r\n                                        {text: 'Confirm', onPress: handleDeleteAcct(true) },\r\n                                    ],\r\n                                    { cancelable: false }\r\n                                )}>\r\n                                <Text style = {styles.deleteText}>Delete Account ?</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    {/* <View style = {{flexDirection: 'row', justifyContent:'space-evenly'}} > */}\r\n                    {/* <TouchableOpacity >\r\n                        <View style = {styles.button}>\r\n                            <Text style = {styles.button_label}>Sign out</Text>           \r\n                        </View>\r\n                    </TouchableOpacity> */}\r\n                    {/* <TouchableOpacity >\r\n                        <View style = {styles.button}>\r\n                            <Text style = {styles.button_Delete}>Delete Account</Text>           \r\n                        </View>\r\n                    </TouchableOpacity> */}\r\n                    {/* </View> */}\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}