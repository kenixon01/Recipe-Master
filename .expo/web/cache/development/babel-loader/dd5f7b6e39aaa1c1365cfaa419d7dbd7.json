{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport style from \"./style\";\nimport * as Font from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Login = function (_Component) {\n  _inherits(Login, _Component);\n  var _super = _createSuper(Login);\n  function Login(props) {\n    var _this;\n    _classCallCheck(this, Login);\n    _this = _super.call(this, props);\n    _this.validateFields = function () {\n      var _this$state = _this.state,\n        email = _this$state.email,\n        password = _this$state.password;\n      if (!email.trim() || !password.trim()) {\n        alert('No fields can remain blank');\n        return;\n      }\n    };\n    _this.state = {\n      email: '',\n      password: '',\n      fontsLoaded: false\n    };\n    return _this;\n  }\n  _createClass(Login, [{\n    key: \"loadFonts\",\n    value: function () {\n      var _loadFonts = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          CairoPlay: require(\"../../../../assets/fonts/CairoPlay-ExtraBold.ttf\")\n        });\n        this.setState({\n          fontsLoaded: true\n        });\n      });\n      function loadFonts() {\n        return _loadFonts.apply(this, arguments);\n      }\n      return loadFonts;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      if (!this.state.fontsLoaded) {\n        this.loadFonts();\n      } else {\n        return _jsx(View, {\n          style: style.container,\n          children: _jsx(ImageBackground, {\n            source: require(\"../../../../assets/20221230_143041_212.jpg\"),\n            style: style.image,\n            resizeMode: \"cover\",\n            children: _jsxs(View, {\n              style: style.containerBottom,\n              children: [_jsx(Text, {\n                style: _objectSpread(_objectSpread({}, style.title), {}, {\n                  fontFamily: 'CairoPlay'\n                }),\n                children: \"Recipe Master\"\n              }), _jsxs(View, {\n                style: style.loginContainer,\n                children: [_jsx(View, {\n                  style: style.inputView,\n                  children: _jsx(TextInput, {\n                    style: style.inputText,\n                    autoCapitalize: 'none',\n                    keyboardType: 'email-address',\n                    placeholder: \"Username or Email\",\n                    placeholderTextColor: \"#003f5c\",\n                    onChangeText: function onChangeText(email) {\n                      return _this2.setState({\n                        email: email\n                      });\n                    }\n                  })\n                }), _jsx(View, {\n                  style: style.inputView,\n                  children: _jsx(TextInput, {\n                    style: style.inputText,\n                    secureTextEntry: true,\n                    autoCapitalize: 'none',\n                    placeholder: \"Password\",\n                    placeholderTextColor: \"#003f5c\",\n                    onChangeText: function onChangeText(password) {\n                      return _this2.setState({\n                        password: password\n                      });\n                    }\n                  })\n                }), _jsx(View, {\n                  children: _jsx(Button, {\n                    title: \"Forgot Password\",\n                    onPress: function onPress() {\n                      return _this2.props.navigation.navigate(\"ForgotPassword\");\n                    },\n                    type: \"clear\"\n                  })\n                })]\n              }), _jsx(TouchableOpacity, {\n                style: style.loginBtn,\n                onPress: function onPress() {\n                  return _this2.props.navigation.navigate(\"Main\");\n                },\n                children: _jsx(Text, {\n                  style: style.loginText,\n                  children: \"Login\"\n                })\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    color: 'white'\n                  },\n                  children: \"No Account \"\n                }), _jsx(Text, {\n                  onPress: function onPress() {\n                    return _this2.props.navigation.navigate(\"Register\");\n                  },\n                  style: style.SignUpText,\n                  children: \" Sign up \"\n                })]\n              })]\n            })\n          })\n        });\n      }\n    }\n  }]);\n  return Login;\n}(Component);\nexport default Login;","map":{"version":3,"names":["React","Component","style","Font","Login","props","validateFields","state","email","password","trim","alert","fontsLoaded","loadAsync","CairoPlay","require","setState","loadFonts","container","image","containerBottom","title","fontFamily","loginContainer","inputView","inputText","navigation","navigate","loginBtn","loginText","flexDirection","color","SignUpText"],"sources":["C:/Users/minix/OneDrive/Documents/GitHub/Recipe-Master/components/auth/Screens/login/Login.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Button, Text, TextInput, TouchableOpacity, ImageBackground } from 'react-native'\r\nimport style from './style'\r\nimport * as Font from 'expo-font';\r\n\r\nexport class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            fontsLoaded: false\r\n        }\r\n        \r\n    }\r\n\r\n    async loadFonts() {\r\n      await Font.loadAsync({\r\n        CairoPlay: require('../../../../assets/fonts/CairoPlay-ExtraBold.ttf'),\r\n      });\r\n      this.setState({ fontsLoaded: true });\r\n    }\r\n\r\n  validateFields = () => {\r\n    const { email, password} = this.state;\r\n    if ( !email.trim() || !password.trim()){\r\n      alert('No fields can remain blank')\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.fontsLoaded) {this.loadFonts()}\r\n    else {\r\n    return ( \r\n      <View style = {style.container}>\r\n        <ImageBackground source={require('../../../../assets/20221230_143041_212.jpg')} style={style.image} resizeMode=\"cover\">\r\n        <View style = {style.containerBottom}> \r\n          <Text style={{...style.title, fontFamily: 'CairoPlay' }}>Recipe Master</Text>\r\n          <View style= {style.loginContainer}>\r\n            <View style = {style.inputView}>\r\n              <TextInput \r\n                  style = {style.inputText}\r\n                  autoCapitalize={'none'}\r\n                  keyboardType={'email-address'}\r\n                  placeholder = \"Username or Email\"\r\n                  placeholderTextColor=\"#003f5c\"\r\n                  onChangeText = {(email) => this.setState({email})}\r\n                  />\r\n            </View> \r\n            <View style = {style.inputView}>\r\n              <TextInput\r\n                  style = {style.inputText}\r\n                  secureTextEntry = {true}\r\n                  autoCapitalize={'none'}\r\n                  placeholder = \"Password\"\r\n                  placeholderTextColor=\"#003f5c\"\r\n                  onChangeText = {(password) => this.setState({password})}\r\n                  />\r\n            </View> \r\n            <View>\r\n                <Button\r\n                  title='Forgot Password'\r\n                  onPress={() => this.props.navigation.navigate(\"ForgotPassword\")}\r\n                  // titleStyle = {{color: '#039BE5', }}\r\n                  type = 'clear'\r\n                />\r\n            </View>\r\n          </View>\r\n          <TouchableOpacity style={style.loginBtn} \r\n            onPress = {() => this.props.navigation.navigate(\"Main\")}>\r\n              <Text style={style.loginText}>Login</Text> \r\n          </TouchableOpacity>\r\n\r\n          <View style = {{flexDirection: 'row'}}>\r\n            <Text style = {{color:'white'}}>No Account </Text>\r\n            <Text onPress={() => this.props.navigation.navigate(\"Register\")} style = {style.SignUpText}> Sign up </Text>\r\n          </View>\r\n        </View>\r\n        </ImageBackground>\r\n        \r\n      </View>\r\n    )}\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Login\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}